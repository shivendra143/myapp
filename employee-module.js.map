{"version":3,"sources":["webpack:///./src/app/employee/copempadd/copempadd.component.html","webpack:///./src/app/employee/copempadd/copempadd.component.scss","webpack:///./src/app/employee/copempadd/copempadd.component.ts","webpack:///./src/app/employee/copempedit/copempedit.component.html","webpack:///./src/app/employee/copempedit/copempedit.component.scss","webpack:///./src/app/employee/copempedit/copempedit.component.ts","webpack:///./src/app/employee/empinfo/empinfo.component.html","webpack:///./src/app/employee/empinfo/empinfo.component.scss","webpack:///./src/app/employee/empinfo/empinfo.component.ts","webpack:///./src/app/employee/employee.module.ts","webpack:///./src/app/employee/indempadd/control-messages.component.ts","webpack:///./src/app/employee/indempadd/indempadd.component.html","webpack:///./src/app/employee/indempadd/indempadd.component.scss","webpack:///./src/app/employee/indempadd/indempadd.component.ts","webpack:///./src/app/employee/indempedit/indempedit.component.html","webpack:///./src/app/employee/indempedit/indempedit.component.scss","webpack:///./src/app/employee/indempedit/indempedit.component.ts","webpack:///./src/app/services/employee.service.ts"],"names":[],"mappings":"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","file":"employee-module.js","sourcesContent":["module.exports = \"\\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n      \\n              <div class=\\\"pull-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n      \\n                  <h1 class=\\\"title\\\">Add Corporate Employer</h1>\\n                  <!-- PAGE HEADING TAG - END -->\\n              </div>\\n      \\n              <div class=\\\"pull-right hidden-xs\\\">\\n                  <ol class=\\\"breadcrumb\\\">\\n                      <li>\\n                          <a routerLink=\\\"/\\\">\\n                              <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                      </li>\\n                      <li>\\n                          <a routerLink=\\\"/employee\\\">\\n                              <i class=\\\"fa fa-list-ol\\\"></i>Employer</a>\\n                      </li>\\n                      <li class=\\\"active\\\">\\n                          <strong>Add Corporate Employer</strong>\\n                      </li>\\n      \\n                  </ol>\\n              </div>\\n      \\n          </div>\\n         \\n      </div>\\n      \\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"page-title\\\">\\n  \\n                <div class=\\\"float-left\\\">\\n                    <!-- PAGE HEADING TAG - START -->\\n              \\n                </div>\\n                <div class=\\\"float-right\\\">\\n                   <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n  \\n                </div>\\n  \\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <!-- MAIN CONTENT AREA STARTS -->\\n  \\n        <div class=\\\"col-xl-12\\\">\\n            <section class=\\\"box \\\">\\n                  <div class=\\\"content-body \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                          <div class=\\\"container\\\">\\n                            <form [formGroup]=\\\"userForm\\\" (submit)=\\\"saveUser()\\\">\\n                                 \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"userFirstName\\\"><strong>First Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input  type=\\\"text\\\" formControlName=\\\"userFirstName\\\" class=\\\"form-control\\\" id=\\\"userFirstName\\\" maxlength=\\\"40\\\" placeholder=\\\"First Name\\\"/> \\n                                      </div>\\n                                  </div>\\n  \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"userLastName\\\"><strong>Last Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input  type=\\\"text\\\" formControlName=\\\"userLastName\\\" class=\\\"form-control\\\" id=\\\"userLastName\\\" maxlength=\\\"40\\\" placeholder=\\\"Last Name\\\"/> \\n                                      </div>\\n                                  </div>\\n                                 \\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"userEmail\\\"><strong>Email*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"userEmail\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"userEmail\\\" placeholder=\\\"Email\\\"/>  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  \\n                                  <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"gender\\\"><strong>Gender*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"gender\\\" formControlName=\\\"gender\\\" class=\\\"form-control\\\" >\\n                                              <option *ngFor=\\\"let s of gender\\\" [ngValue]=\\\"s.value\\\">{{ s.name }}</option>\\n                                           </select>\\n                                        </div>\\n                                    </div>\\n\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"userPhone\\\"><strong>Mobile No*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          \\n                                          <input type=\\\"text\\\" formControlName=\\\"userPhone\\\" class=\\\"form-control phone_number\\\" maxlength=\\\"10\\\" id=\\\"userPhone\\\" name=\\\"phoneNumber\\\" placeholder=\\\"Phone Number\\\" />\\n                                        \\n                                      </div>\\n                                  </div>\\n                                 \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"userPassword\\\"><strong>Password*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"userPassword\\\" formControlName=\\\"userPassword\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"confirmpassword\\\"><strong>Confirm Password*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"password\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"confirmpassword\\\"  placeholder=\\\"Confirm Password\\\" />  <br>\\n                                        \\n                                     </div>\\n                                  </div>\\n                                  \\n                                    <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"country\\\"><strong>Country*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"country\\\" formControlName=\\\"country\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                              <option>--Select--</option>\\n                                              <option *ngFor=\\\"let s of Countries\\\" [ngValue]=\\\"s._id\\\">{{ s.countryName }}</option>\\n                                          </select> \\n                                       </div>\\n                                    </div>\\n\\n                                     <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"state\\\"><strong>State Name*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                            <select id=\\\"state\\\" formControlName=\\\"state\\\"  (change)=\\\"getCities()\\\" class=\\\"form-control\\\" >\\n                                              <option>--Select--</option>\\n                                              <option *ngFor=\\\"let s of States\\\" [ngValue]=\\\"s._id\\\"> {{ s.stateName }} </option>\\n                                            </select> \\n                                         </div>\\n                                      </div>\\n    \\n                                      <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"city\\\"><strong>City Name*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                            <select id=\\\"city\\\" formControlName=\\\"city\\\"   class=\\\"form-control\\\" >\\n                                              <option>--Select--</option>\\n                                              <option *ngFor=\\\"let s of Cities\\\" [ngValue]=\\\"s._id\\\"> {{ s.cityName }} </option>\\n                                            </select> \\n                                         </div>\\n                                   </div>\\n\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"address\\\"><strong>Address*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <ng4geo-autocomplete (componentCallback)=\\\"autoCompleteCallback1($event)\\\" ></ng4geo-autocomplete>\\n                                          <input type=\\\"hidden\\\" formControlName=\\\"address\\\" name=\\\"address\\\" id=\\\"userAddress\\\">\\n                                      </div>\\n                                   </div>\\n                                  \\n                                   <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"businessName\\\"><strong>Business Name*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                            <input type=\\\"text\\\"  class=\\\"form-control\\\"  formControlName=\\\"businessName\\\"  id=\\\"businessName\\\"  placeholder=\\\"Business Name\\\" />  <br>\\n                                          \\n                                       </div>\\n                                    </div>\\n                                  \\n                                    <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"businessAddress\\\"><strong>Business Adress*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                            <input type=\\\"text\\\"  class=\\\"form-control\\\"  formControlName=\\\"businessAddress\\\"  id=\\\"businessAddress\\\"  placeholder=\\\"Business Address\\\" />  <br>\\n                                          \\n                                       </div>\\n                                    </div>\\n                                    <div  class=\\\"form-group row\\\">\\n                                            <div class=\\\"col-sm-3\\\">\\n                                                <label class=\\\"mt-2\\\" for=\\\"workId\\\"><strong>Work ID Card*</strong></label>\\n                                            </div>\\n                                            <div  class=\\\"col-sm-9\\\">\\n                                                 <input type=\\\"text\\\" formControlName=\\\"workId\\\" class=\\\"form-control\\\" name=\\\"workId\\\" id=\\\"workId\\\">\\n                                            </div>\\n                                    </div>\\n      \\n                                    <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"companyRegistrationNo\\\"><strong>Company Registration Number*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                                <input type=\\\"text\\\" formControlName=\\\"companyRegistrationNo\\\" class=\\\"form-control\\\" name=\\\"companyRegistrationNo\\\" id=\\\"companyRegistrationNo\\\">\\n                                        </div>\\n                                    </div>\\n                                   \\n                                   \\n                                    <div  class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-3\\\">\\n                                            <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Corporate's image*</strong></label>\\n                                        </div>\\n                                        <div  class=\\\"col-sm-9\\\">\\n                                            <label for=\\\"fileToUpload\\\">\\n                                               <input type=\\\"File\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" (change)=\\\"myUploaderNew($event)\\\">\\n                                              <input type=\\\"hidden\\\" formControlName=\\\"businessLogo\\\" id=\\\"businessLogo\\\" >\\n                                             </label>\\n                                            <div style=\\\"color:green;\\\">{{msg}}</div>\\n                                        </div>\\n                                     </div>\\n                                 \\n                        \\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Add Corporate Employer</button>\\n                                      </div>\\n                                  </div>    \\n                                 \\n                              </form>\\n                    \\n                           \\n                           </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </section>\\n        </div>\\n  \\n  \\n  \\n  \\n  \\n  \\n      \\n  \\n  \\n  \\n  \\n  \"","module.exports = \".container {\\n  width: 700px; }\\n\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport { HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { ValidationService } from '../../services/validation.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { StateService } from '../../services/state.service';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.service';\ndeclare var google: any;\n\n@Component({\n  selector: 'app-copempadd',\n  templateUrl: './copempadd.component.html',\n  styleUrls: ['./copempadd.component.scss']\n})\nexport class CopempaddComponent implements OnInit {\n\n  userForm: any;\n  driverid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  options: UploaderOptions;\n  strVal:any;\n  lastChar:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public address: any = '';\n  Countries: any[] = [{'countryName':'--Select--', '_id':''}];\n  States: any[] = [{'stateName':'--Select--', '_id':''}];\n  Cities: any[] = [{'cityName':'--Select--', '_id':''}];\n  gender: any[] = [{'name':'--Select--', 'value':''}, {'name':'Male','value':'Male'}, \n  {'name':'Female','value':'Female'}];\n  default: string = '';;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: EmployeeService,\n    private countryservice: CountryService,\n    private stateservice: StateService,\n    private cityservice: CityService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.driverid = params['driverid'];\n      console.log(this.driverid)\n\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n   \n\n    this.userForm = this.formBuilder.group({\n      userFirstName: ['', Validators.required],\n      userLastName: ['', Validators.required],\n      userEmail: ['', Validators.required],\n      userPhone: ['', Validators.required],\n      userRole:\"CorporateEmployer\",\n      userPassword: ['', Validators.required],\n      gender: ['', Validators.required],\n      country: ['', Validators.required],\n      state: ['', ],\n      city: ['', ],\n      address: ['', Validators.required],\n      businessName: ['', Validators.required],\n      businessAddress: ['', Validators.required],\n      businessLogo: ['',],\n      workIdCard: ['', Validators.required],\n      workId: ['', Validators.required],\n      companyRegistrationNo: ['', Validators.required]\n    });\n    \n    this.userForm.controls['country'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['gender'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['state'].setValue(this.default, {onlySelf: true});\n\n  }\n\n  \n  \n  saveUser() {\n    if(this.userForm.value.userFirstName ==''){\n      this.toastr.error('Usr name is required');\n      return false;\n    }\n  \n    console.log(this.userForm.value)\n    if (this.userForm.dirty && this.userForm.valid) {\n      \n       this.service.createcorpEmployee(this.userForm.value).subscribe(\n            data => {\n                console.log(data)\n                 this.toastr.success('User added Successfully');\n                 this._router.navigate(['/employee']);\n            },\n            error => {\n              this.toastr.error('Error');\n            });\n    }\n  }\n\n  myUploaderNew(event1) {\n    this.service.uploadLogo(event1).subscribe(\n      data => {\n        console.log(data)\n      this.userForm.controls['businessLogo'].setValue(data['path'].businessLogo);\n      this.userForm.controls['workIdCard'].setValue(data['path'].businessLogo);\n      this.userForm.controls['companyRegistrationNo'].setValue(data['path'].businessLogo);\n     //  this.profile_image = data.data.url;\n       this.msg = 'Uploded successfully';\n      },\n      error => {\n         console.log('error')\n      });\n   }\n    \n  autoCompleteCallback1(data: any): any {\n    if(data.data.formatted_address == ''){\n      this.address =\"\";\n    }else{\n    this.address = JSON.stringify(data.data.formatted_address);\n    }\n    this.userForm.controls['address'].setValue(this.address);\n    \n  }\n\n  ngOnInit() {\n      this.getCountries();     \n  }\n\n  getCountries() {\n    this.countryservice.getCountries().subscribe(res => {\n      this.Countries = res['countries'];\n   });\n  }\n\n  getStates() {\n    let cid = this.userForm.value.country\n    let query = '?country_id='+cid;\n   // let query = '?country_id='+'5b64792806ff811e1f06f0d0';\n    this.stateservice.getStates(query).subscribe(res => {\n      console.log(res)\n      this.States = res['states'];\n   });\n  }\n \n  getCities() {\n    let cid = this.userForm.value.state;\n   // let query = '?state_id=5b6479ab06ff811e1f06f110';\n    let query = '?state_id='+cid;\n    this.cityservice.getCities(query).subscribe(res => {\n      this.Cities = res['cities'];\n   });\n  }\n\n}\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Edit Corporate Employer</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/employee\\\">\\n                            <i class=\\\"fa fa-list-ol\\\"></i>Employer</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Edit Corporate Employer</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n       \\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n\\n      <div class=\\\"col-xl-12\\\">\\n          <section class=\\\"box \\\">\\n                <div class=\\\"content-body \\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-12\\\">\\n                        <div class=\\\"container\\\">\\n                          <form [formGroup]=\\\"userForm\\\" (submit)=\\\"saveUser()\\\">\\n                               \\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userFirstName\\\"><strong>First Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input  type=\\\"hidden\\\" formControlName=\\\"id\\\" class=\\\"form-control\\\" id=\\\"id\\\"/> \\n                                        <input  type=\\\"text\\\" formControlName=\\\"userFirstName\\\" class=\\\"form-control\\\" id=\\\"userFirstName\\\" maxlength=\\\"40\\\" placeholder=\\\"First Name\\\"/> \\n                                    </div>\\n                                </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userLastName\\\"><strong>Last Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input  type=\\\"text\\\" formControlName=\\\"userLastName\\\" class=\\\"form-control\\\" id=\\\"userLastName\\\" maxlength=\\\"40\\\" placeholder=\\\"Last Name\\\"/> \\n                                    </div>\\n                                </div>\\n                               \\n                                 <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userEmail\\\"><strong>Email*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"userEmail\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"userEmail\\\" placeholder=\\\"Email\\\"/>  <br>\\n                                       \\n                                   </div>\\n                                </div>\\n                                \\n                                <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"gender\\\"><strong>Gender*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"gender\\\" formControlName=\\\"gender\\\" class=\\\"form-control\\\" >\\n                                            <option *ngFor=\\\"let s of gender\\\" [ngValue]=\\\"s.value\\\">{{ s.name }}</option>\\n                                         </select>\\n                                      </div>\\n                                  </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userPhone\\\"><strong>Mobile No*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        \\n                                        <input type=\\\"text\\\" formControlName=\\\"userPhone\\\" class=\\\"form-control phone_number\\\" maxlength=\\\"10\\\" id=\\\"userPhone\\\" name=\\\"phoneNumber\\\" placeholder=\\\"Phone Number\\\" />\\n                                      \\n                                    </div>\\n                                </div>\\n                               \\n                               <!-- <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userPassword\\\"><strong>Password*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"userPassword\\\" formControlName=\\\"userPassword\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" />  <br>\\n                                       \\n                                   </div>\\n                                </div>\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"confirmpassword\\\"><strong>Confirm Password*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"password\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"confirmpassword\\\"  placeholder=\\\"Confirm Password\\\" />  <br>\\n                                      \\n                                   </div>\\n                                </div>-->\\n                                \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"country\\\"><strong>Country*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"country\\\" formControlName=\\\"country\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of Countries\\\" [ngValue]=\\\"s._id\\\">{{ s.countryName }}</option>\\n                                        </select> \\n                                     </div>\\n                                  </div>\\n\\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"state\\\"><strong>State Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"state\\\" formControlName=\\\"state\\\"  (change)=\\\"getCities()\\\" class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of States\\\" [ngValue]=\\\"s._id\\\"> {{ s.stateName }} </option>\\n                                          </select> \\n                                       </div>\\n                                    </div>\\n  \\n                                    <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"city\\\"><strong>City Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"city\\\" formControlName=\\\"city\\\"   class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of Cities\\\" [ngValue]=\\\"s._id\\\"> {{ s.cityName }} </option>\\n                                          </select> \\n                                       </div>\\n                                 </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"address\\\"><strong>Address*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\" name=\\\"address\\\" id=\\\"userAddress\\\">\\n                                    </div>\\n                                 </div>\\n                                \\n                                 <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"businessName\\\"><strong>Business Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\"  class=\\\"form-control\\\"  formControlName=\\\"businessName\\\"  id=\\\"businessName\\\"  placeholder=\\\"Business Name\\\" />  <br>\\n                                        \\n                                     </div>\\n                                  </div>\\n                                \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"businessAddress\\\"><strong>Business Adress*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\"  class=\\\"form-control\\\"  formControlName=\\\"businessAddress\\\"  id=\\\"businessAddress\\\"  placeholder=\\\"Business Address\\\" />  <br>\\n                                        \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                          <div class=\\\"col-sm-3\\\">\\n                                              <label class=\\\"mt-2\\\" for=\\\"workId\\\"><strong>Work ID Card*</strong></label>\\n                                          </div>\\n                                          <div  class=\\\"col-sm-9\\\">\\n                                               <input type=\\\"text\\\" formControlName=\\\"workId\\\" class=\\\"form-control\\\" name=\\\"workId\\\" id=\\\"workId\\\">\\n                                          </div>\\n                                  </div>\\n    \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"companyRegistrationNo\\\"><strong>Company Registration Number*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                              <input type=\\\"text\\\" formControlName=\\\"companyRegistrationNo\\\" class=\\\"form-control\\\" name=\\\"companyRegistrationNo\\\" id=\\\"companyRegistrationNo\\\">\\n                                      </div>\\n                                  </div>\\n                                 \\n                                 \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Corporate's image*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <label for=\\\"fileToUpload\\\">\\n                                             <input type=\\\"File\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" (change)=\\\"myUploaderNew($event)\\\">\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"businessLogo\\\" id=\\\"businessLogo\\\" >\\n                                           </label>\\n                                          <div style=\\\"color:green;\\\">{{msg}}</div>\\n                                      </div>\\n                                   </div>\\n                               \\n                      \\n                                 <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Update Corporate Employer</button>\\n                                    </div>\\n                                </div>    \\n                               \\n                            </form>\\n                  \\n                         \\n                         </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </section>\\n      </div>\\n\\n\\n\\n\\n\\n\\n    \\n\\n\\n\\n\\n\"","module.exports = \".container {\\n  width: 700px; }\\n\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport { HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { ValidationService } from '../../services/validation.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { StateService } from '../../services/state.service';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.service';\ndeclare var google: any;\n\n@Component({\n  selector: 'app-copempedit',\n  templateUrl: './copempedit.component.html',\n  styleUrls: ['./copempedit.component.scss']\n})\nexport class CopempeditComponent implements OnInit {\n\n  userForm: any;\n  driverid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  options: UploaderOptions;\n  strVal:any;\n  Employees:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public address: any = '';\n  Countries: any[] = [{'countryName':'--Select--', '_id':''}];\n  States: any[] = [{'stateName':'--Select--', '_id':''}];\n  Cities: any[] = [{'cityName':'--Select--', '_id':''}];\n  gender: any[] = [{'name':'--Select--', 'value':''}, {'name':'Male','value':'Male'}, \n  {'name':'Female','value':'Female'}];\n  default: string = '';;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: EmployeeService,\n    private countryservice: CountryService,\n    private stateservice: StateService,\n    private cityservice: CityService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.driverid = params['driverid'];\n      console.log(this.driverid)\n\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n   \n\n    this.userForm = this.formBuilder.group({\n      id: [this.driverid, Validators.required],\n      userFirstName: ['', Validators.required],\n      userLastName: ['', Validators.required],\n      userEmail: ['', Validators.required],\n      userPhone: ['', Validators.required],\n     // userPassword: ['', Validators.required],\n      userRole:\"CorporateEmployer\",\n      gender: ['', Validators.required],\n      country: ['', Validators.required],\n      state: ['', ],\n      city: ['', ],\n      address: ['', Validators.required],\n      businessName: ['', Validators.required],\n      businessAddress: ['', Validators.required],\n      businessLogo: ['',],\n      workIdCard: ['', Validators.required],\n      workId: ['', Validators.required],\n      companyRegistrationNo: ['', Validators.required]\n    });\n    \n    this.userForm.controls['country'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['gender'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['state'].setValue(this.default, {onlySelf: true});\n\n  }\n\n   getUsers() {\n    let query = '/'+this.driverid;\n    this.service.getEmployee(query).subscribe(res => {\n    \n      this.Employees = res['employer'].user;\n\n      this.getStates(this.Employees.country._id);\n      this.getCities(this.Employees.state._id);\n        // console.log(res)\n         console.log(this.Employees)\n        this.userForm.controls['id'].setValue( this.Employees._id, {onlySelf: true});\n        this.userForm.controls['userFirstName'].setValue( this.Employees.userFirstName, {onlySelf: true});\n        this.userForm.controls['userLastName'].setValue( this.Employees.userLastName, {onlySelf: true});\n        this.userForm.controls['userEmail'].setValue( this.Employees.userEmail, {onlySelf: true});\n        this.userForm.controls['userPhone'].setValue( this.Employees.userPhone, {onlySelf: true});\n        this.userForm.controls['userRole'].setValue( this.Employees.userRole, {onlySelf: true});\n        this.userForm.controls['country'].setValue( this.Employees.country._id, {onlySelf: true});\n        this.userForm.controls['state'].setValue( this.Employees.state._id, {onlySelf: true});\n        this.userForm.controls['city'].setValue( this.Employees.city._id, {onlySelf: true});\n        this.userForm.controls['gender'].setValue( this.Employees.gender, {onlySelf: true});\n        this.userForm.controls['address'].setValue( this.Employees.userAddress, {onlySelf: true});\n        this.userForm.controls['businessName'].setValue( res['employer'].businessName, {onlySelf: true});\n        this.userForm.controls['businessAddress'].setValue( res['employer'].businessAddress, {onlySelf: true});\n        this.userForm.controls['businessLogo'].setValue( res['employer'].businessLogo, {onlySelf: true});\n        this.userForm.controls['workIdCard'].setValue( res['employer'].workIdCard, {onlySelf: true});\n        this.userForm.controls['workId'].setValue( res['employer'].workIdCard, {onlySelf: true});\n        this.userForm.controls['companyRegistrationNo'].setValue( res['employer'].companyRegistrationNo, {onlySelf: true});\n    \n\n      });\n  }\n  \n  saveUser() {\n    console.log(this.userForm.value.id)\n    if(this.userForm.value.userFirstName ==''){\n      this.toastr.error('Usr name is required');\n      return false;\n    }\n  \n    \n    if (this.userForm.valid) {\n       let query = '/'+this.userForm.value.id;\n       this.service.updatecorpEmployee(this.userForm.value,query).subscribe(\n            data => {\n                console.log(data)\n                 this.toastr.success('User Updated Successfully');\n                 this._router.navigate(['/employee']);\n            },\n            error => {\n              this.toastr.error('Error');\n            });\n    }\n  }\n\n  myUploaderNew(event1) {\n    this.service.uploadLogo(event1).subscribe(\n      data => {\n        console.log(data)\n      this.userForm.controls['businessLogo'].setValue(data['path'].businessLogo);\n      this.userForm.controls['workIdCard'].setValue(data['path'].businessLogo);\n      this.userForm.controls['companyRegistrationNo'].setValue(data['path'].businessLogo);\n     //  this.profile_image = data.data.url;\n       this.msg = 'Uploded successfully';\n      },\n      error => {\n         console.log('error')\n      });\n   }\n    \n  autoCompleteCallback1(data: any): any {\n    if(data.data.formatted_address == ''){\n      this.address =\"\";\n    }else{\n    this.address = JSON.stringify(data.data.formatted_address);\n    }\n    this.userForm.controls['address'].setValue(this.address);\n    \n  }\n\n  ngOnInit() {\n      this.getUsers();     \n      this.getCountries();     \n  }\n\n  getCountries() {\n    this.countryservice.getCountries().subscribe(res => {\n      this.Countries = res['countries'];\n   });\n  }\n\n  getStates(id) {\n    let cid;\n    if(this.userForm.value.country==''){\n       cid = id;\n    }else{\n       cid = this.userForm.value.country;\n    }\n     let query = '?country_id='+cid;\n   // let query = '?country_id='+'5b64792806ff811e1f06f0d0';\n    this.stateservice.getStates(query).subscribe(res => {\n      console.log(res)\n      this.States = res['states'];\n   });\n  }\n \n  getCities(id) {\n    let cid;\n    if(this.userForm.value.state==''){\n       cid = id;\n    }else{\n       cid = this.userForm.value.state;\n    }\n    let query = '?state_id='+cid;\n    this.cityservice.getCities(query).subscribe(res => {\n      this.Cities = res['cities'];\n   });\n  }\n\n}\n","module.exports = \"<div class=\\\"col-12\\\">\\n  <div class=\\\"page-title\\\">\\n\\n      <div class=\\\"pull-left\\\">\\n          <!-- PAGE HEADING TAG - START -->\\n\\n          <h1 class=\\\"title\\\">Manage Employers</h1>\\n          <!-- PAGE HEADING TAG - END -->\\n      </div>\\n\\n      <div class=\\\"pull-right hidden-xs\\\">\\n          <ol class=\\\"breadcrumb\\\">\\n              <li>\\n                  <a routerLink=\\\"/\\\">\\n                      <i class=\\\"fa fa-home\\\"></i>Home</a>\\n              </li>\\n              <li class=\\\"active\\\">\\n                  <strong>Employers</strong>\\n              </li>\\n\\n          </ol>\\n      </div>\\n\\n  </div>\\n  <div class=\\\"custum-links\\\" style=\\\"position: absolute; right: 15px; z-index: 1\\\">\\n      <a routerLink=\\\"/employee/add-ind-employee\\\" style=\\\"font-weight: bold;\\\">\\n          <i class=\\\"fa fa-plus\\\"></i> Add Individual Employer </a> &nbsp;\\n      <a routerLink=\\\"/employee/add-corp-employee\\\" style=\\\"font-weight: bold;\\\">\\n          <i class=\\\"fa fa-plus\\\"></i> Add Corporate Employer</a>\\n  </div>\\n</div>\\n\\n\\n\\n<div class=\\\"col-md-12\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n          <ul class=\\\"nav nav-tabs primary\\\"  role=\\\"tablist\\\">\\n              <li class=\\\"nav-item\\\">\\n                  <a class=\\\"nav-link active\\\">\\n                      <i class=\\\"fa fa-user\\\"></i> Employers List\\n                  </a>\\n              </li>\\n             <!-- <li class=\\\"nav-item\\\">\\n                  <a class=\\\"nav-link\\\" [routerLink]=\\\"['system-users']\\\">\\n                      <i class=\\\"fa fa-info-circle\\\"></i> System Users\\n                  </a>\\n              </li>-->\\n\\n          </ul>\\n      </div>\\n\\n\\n\\n\\n  </div>\\n</div>\\n\\n<!-- MAIN CONTENT AREA STARTS -->\\n\\n<div class=\\\"col-xl-12\\\">\\n  <section class=\\\"box \\\">\\n      <!-- <header class=\\\"panel_header\\\">\\n                  <h2 class=\\\"title float-left\\\"></h2>\\n                  <div class=\\\"float-right\\\" style=\\\"margin-top:20px;margin-right:40px;\\\">\\n                      <a [routerLink]=\\\"['archive-user']\\\" class=\\\"btn btn-primary\\\"> Archive User</a>\\n                  </div>\\n              </header> -->\\n      <div class=\\\"content-body\\\">\\n          <div class=\\\"row margin-0\\\">\\n\\n              <div class=\\\"col-lg-4\\\">\\n\\n              </div>\\n              <div class=\\\"col-lg-8\\\">\\n                  <form>\\n                      <!--                                 \\n                              <div class=\\\"col-lg-3\\\" style=\\\"float:left\\\">\\n                                  Status\\n                              </div>\\n                              <div class=\\\"col-lg-3\\\" style=\\\"float:left\\\">\\n                                  Completeness\\n                              </div>\\n                              <div class=\\\"col-lg-3\\\" style=\\\"float:right\\\">\\n                                  Onboard Date\\n                              </div> -->\\n                  </form>\\n              </div>\\n          </div>\\n          <div class=\\\"row margin-0\\\">\\n\\n          </div>\\n          <br>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-12\\\">\\n                  <!-- ********************************************** -->\\n                  <div></div>\\n\\n                  <div class=\\\"\\\">\\n\\n                      <div class=\\\"pagination-data\\\" style=\\\"overflow: scroll;height:600px;min-height:600px;\\\">\\n\\n                          <table id=\\\"example-11\\\" class=\\\"display table table-bordered table-striped  dt-responsive dataTable no-footer\\\" cellspacing=\\\"0\\\"\\n                              width=\\\"100%\\\" *ngIf=\\\"no_data==false\\\">\\n                              <thead>\\n                                  <tr>\\n                                      <th>S.No.</th>\\n                                      <th> First Name </th>\\n                                      <th> Last Name </th>\\n                                      <th> Email </th>\\n                                      <th> Mobile No</th>\\n                                      <th> Country </th>\\n                                      <th> User Role </th>\\n                                      <th> Archive/Inactive </th>\\n                                      <th>Action</th>\\n                                  </tr>\\n                              </thead>\\n                              <tr></tr>\\n                              <tr *ngFor=\\\"let user of Employees ;  let i = index\\\">\\n                                   \\n                                  <td class=\\\"ng-binding\\\"> {{i + 1}} </td>\\n                                  <td class=\\\"ng-binding\\\"> {{user.user?.userFirstName == ''?'N/A':user.user?.userFirstName}} </td>\\n                                  <td class=\\\"ng-binding\\\"> {{(user.user?.userLastName == undefined || user.user?.userLastName == '')?'N/A':user.user?.userLastName}} </td>\\n                                  <td class=\\\"ng-binding\\\"> {{(user.user?.userEmail == undefined || user.user?.userEmail == '')?'N/A':user.user?.userEmail}} </td>\\n                                  <td class=\\\"ng-binding\\\"> {{user.user?.userPhone == ''?'N/A':user.user?.userPhone}} </td>\\n                                  <td class=\\\"ng-binding\\\"> {{user.user?.country.countryName == ''?'N/A':user.user?.country.countryName}} </td>\\n                                  <td class=\\\"ng-binding\\\"> {{user.user.userRole}} </td>\\n                                  <td class=\\\"ng-binding\\\"> <button>{{user.user.userStatus}} </button> </td>\\n                                  \\n                                  <td style=\\\"min-width:120px;\\\">\\n                                        <i class=\\\"fa fa-trash ng-pristine text-danger ng-untouched ng-valid ng-empty\\\" ng-model=\\\"_id\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal-delete\\\" aria-hidden=\\\"true\\\" title=\\\"Delete user\\\" (click)=\\\"deleteemployee(user._id)\\\"></i> &nbsp;\\n                                           \\n                                        <a  *ngIf=\\\"user.user.userRole=='CorporateEmployer'\\\"  [routerLink]=\\\"['edit-corp-employee', user._id]\\\">\\n                                            <i class=\\\"fa fa-eye text-primary\\\" aria-hidden=\\\"true\\\" title=\\\"view user\\\"></i>\\n                                        </a>\\n                                        <a  *ngIf=\\\"user.user.userRole=='IndividualEmployer'\\\"  [routerLink]=\\\"['edit-ind-employee', user._id]\\\">\\n                                            <i class=\\\"fa fa-eye text-primary\\\" aria-hidden=\\\"true\\\" title=\\\"view user\\\"></i>\\n                                        </a>\\n                                         &nbsp;\\n                                         <a *ngIf=\\\"user.user.userRole=='CorporateEmployer'\\\"  [routerLink]=\\\"['edit-corp-employee', user._id]\\\">\\n                                            <i class=\\\"fa fa-edit text-success\\\" aria-hidden=\\\"true\\\" title=\\\"edit user\\\"></i>\\n                                        </a>\\n                                         <a *ngIf=\\\"user.user.userRole=='IndividualEmployer'\\\"  [routerLink]=\\\"['edit-ind-employee', user._id]\\\">\\n                                            <i class=\\\"fa fa-edit text-success\\\" aria-hidden=\\\"true\\\" title=\\\"edit user\\\"></i>\\n                                        </a>\\n                                  </td>\\n                              </tr>\\n                              <tr *ngIf=\\\"no_data\\\">\\n                                  <td colspan=\\\"11\\\">\\n                                      No Data Found\\n                                  </td>\\n                              </tr>\\n                          </table>\\n\\n                          <table id=\\\"example-11\\\" class=\\\"display table table-bordered table-striped  dt-responsive dataTable no-footer\\\" cellspacing=\\\"0\\\"\\n                              width=\\\"100%\\\" *ngIf=\\\"no_data\\\">\\n                              <thead>\\n                                  <tr>\\n\\n                                          <th>S.No.</th>\\n                                          <th> First Name </th>\\n                                          <th> Last Name </th>\\n                                          <th> Email </th>\\n                                          <th> Mobile No</th>\\n                                          <th> Country </th>\\n                                          <th> Archive/Inactive </th>\\n                                          <th>Action</th>\\n\\n                                  </tr>\\n                              </thead>\\n                              <tr *ngIf=\\\"no_data\\\">\\n                                  <td colspan=\\\"8\\\" align=\\\"center\\\">\\n                                      <b>No Data Found</b>\\n                                  </td>\\n                              </tr>\\n                          </table>\\n\\n                      </div>\\n                  \\n                  </div>\\n\\n                  <!-- ********************************************** -->\\n              </div>\\n          </div>\\n      </div>\\n   \\n    \\n  </section>\\n</div>\\n<!-- MAIN CONTENT AREA ENDS -->\\n\"","module.exports = \"section.box {\\n  border-top: 2px solid #fff; }\\n\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\n\n\ndeclare var moment: any;\n\n@Component({\n  selector: 'app-empinfo',\n  templateUrl: './empinfo.component.html',\n  styleUrls: ['./empinfo.component.scss']\n})\nexport class EmpinfoComponent implements OnInit {\n\n  Employees: any[];\n  totalItem: number;\n  no_data: boolean;\n  employeeRef: any = null;\n  modalRef: any = null;\n  constructor(\n    private service: EmployeeService,\n    private route: ActivatedRoute,\n    private modalService: NgbModal,\n    private _router: Router\n   ) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.service.getEmployee().subscribe(res => {\n      console.log(res)\n      this.totalItem = res['employer'].length;\n          if(this.totalItem == 0){\n             this.no_data=true;\n           }else{\n             this.no_data=false;\n           }\n           this.Employees = res['employer'];\n    \n   });\n  }\n  open(content) {\n\t \n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then((result) => {\n      this.employeeRef = null;\n    }, (reason) => {\n      this.employeeRef = null;\n    });\n  }\n \n  delete_u(modal, userid) {\n    this.employeeRef = userid;\n    this.open(modal);\n  }\n  \n  deleteemployee(id){\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmpinfoComponent } from './empinfo/empinfo.component';\nimport { IndempaddComponent } from './indempadd/indempadd.component';\nimport { CopempaddComponent } from './copempadd/copempadd.component';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutModule } from '../theme/layouts/layout.module';\nimport { DefaultComponent } from '../theme/pages/default/default.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxUploaderModule } from 'ngx-uploader';\nimport { FileUploadModule } from 'primeng/components/fileupload/fileupload';\nimport { Ng2PaginationModule } from 'ng2-pagination';\nimport { ValidationService } from '../services/validation.service';\nimport { ControlMessages } from './indempadd/control-messages.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { ScheduleModule } from 'primeng/primeng';\nimport { CalendarModule } from 'primeng/primeng';\nimport { Ng4GeoautocompleteModule } from 'ng4-geoautocomplete';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CopempeditComponent } from './copempedit/copempedit.component';\nimport { IndempeditComponent } from './indempedit/indempedit.component';\n\nconst routes: Routes = [\n    {\n        'path': '',\n        'component': DefaultComponent,\n        'children': [\n                        {\n                          'path': '',\n                          'component': EmpinfoComponent,\n                        },\n                        {\n                          'path': 'add-ind-employee',\n                          'component': IndempaddComponent,\n                        },\n                        {\n                          'path': 'edit-ind-employee/:driverid',\n                          'component': IndempeditComponent,\n                        },\n                        {\n                          'path': 'add-corp-employee',\n                          'component': CopempaddComponent,\n                        },\n                        {\n                          'path': 'edit-corp-employee/:driverid',\n                          'component': CopempeditComponent,\n                        }\n        ],\n    },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyAp5vIeGvze_ZWYwee-fVE3JS3LYnREZP0\",\n      libraries: [\"places\"]\n    }),\n    ToastrModule.forRoot(),\n    NgbModule.forRoot(),\n    Ng4GeoautocompleteModule.forRoot(),\n\t  RouterModule.forChild(routes),\n    LayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxUploaderModule,\n    Ng2PaginationModule,\n    FileUploadModule,\n    ScheduleModule,\n    CalendarModule\n        \n  ],\n  declarations: [EmpinfoComponent, IndempaddComponent, CopempaddComponent, ControlMessages, CopempeditComponent, IndempeditComponent]\n})\nexport class EmployeeModule { }\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ValidationService } from '../../services/validation.service';\r\n\r\n@Component({\r\n  selector: 'control-messages',\r\n  template: `<div class=\"error\" style=\"color:red;\" *ngIf=\"errorMessage !== null\">{{errorMessage}}</div>`\r\n})\r\nexport class ControlMessages {\r\n // errorMessage: string;\r\n  @Input() control: FormControl;\r\n  constructor() { }\r\n\r\n  get errorMessage() {\r\n    for (let propertyName in this.control.errors) {\r\n      if (this.control.errors.hasOwnProperty(propertyName) && this.control.touched) {\r\n        return ValidationService.getValidatorErrorMessage(propertyName, this.control.errors[propertyName]);\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n}\r\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Add Individual Employer</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/employee\\\">\\n                            <i class=\\\"fa fa-list-ol\\\"></i>Employer</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Add Individual Employer</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n       \\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n\\n      <div class=\\\"col-xl-12\\\">\\n          <section class=\\\"box \\\">\\n                <div class=\\\"content-body \\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-12\\\">\\n                        <div class=\\\"container\\\">\\n                            <form [formGroup]=\\\"userForm\\\" (submit)=\\\"saveUser()\\\">\\n                                 \\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userFirstName\\\"><strong>First Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input  type=\\\"text\\\" formControlName=\\\"userFirstName\\\" class=\\\"form-control\\\" id=\\\"userFirstName\\\" maxlength=\\\"40\\\" placeholder=\\\"First Name\\\"/> \\n                                    </div>\\n                                </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userLastName\\\"><strong>Last Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input  type=\\\"text\\\" formControlName=\\\"userLastName\\\" class=\\\"form-control\\\" id=\\\"userLastName\\\" maxlength=\\\"40\\\" placeholder=\\\"Last Name\\\"/> \\n                                    </div>\\n                                </div>\\n                               \\n                                 <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userEmail\\\"><strong>Email*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"userEmail\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"userEmail\\\" placeholder=\\\"Email\\\"/>  <br>\\n                                       \\n                                   </div>\\n                                </div>\\n                                \\n                                <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"gender\\\"><strong>Gender*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"gender\\\" formControlName=\\\"gender\\\" class=\\\"form-control\\\" >\\n                                            <option *ngFor=\\\"let s of gender\\\" [ngValue]=\\\"s.value\\\">{{ s.name }}</option>\\n                                         </select>\\n                                      </div>\\n                                  </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userPhone\\\"><strong>Mobile No*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        \\n                                        <input type=\\\"text\\\" formControlName=\\\"userPhone\\\" class=\\\"form-control phone_number\\\" maxlength=\\\"10\\\" id=\\\"userPhone\\\" name=\\\"phoneNumber\\\" placeholder=\\\"Phone Number\\\" />\\n                                      \\n                                    </div>\\n                                </div>\\n                               \\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userPassword\\\"><strong>Password*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"userPassword\\\" formControlName=\\\"userPassword\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" />  <br>\\n                                       \\n                                   </div>\\n                                </div>\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"confirmpassword\\\"><strong>Confirm Password*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"password\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"confirmpassword\\\"  placeholder=\\\"Confirm Password\\\" />  <br>\\n                                      \\n                                   </div>\\n                                </div>\\n                                \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"country\\\"><strong>Country*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"country\\\" formControlName=\\\"country\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of Countries\\\" [ngValue]=\\\"s._id\\\">{{ s.countryName }}</option>\\n                                        </select> \\n                                     </div>\\n                                  </div>\\n\\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"state\\\"><strong>State Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"state\\\" formControlName=\\\"state\\\"  (change)=\\\"getCities()\\\" class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of States\\\" [ngValue]=\\\"s._id\\\"> {{ s.stateName }} </option>\\n                                          </select> \\n                                       </div>\\n                                    </div>\\n  \\n                                    <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"city\\\"><strong>City Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"city\\\" formControlName=\\\"city\\\"   class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of Cities\\\" [ngValue]=\\\"s._id\\\"> {{ s.cityName }} </option>\\n                                          </select> \\n                                       </div>\\n                                 </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"address\\\"><strong>Address*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <ng4geo-autocomplete (componentCallback)=\\\"autoCompleteCallback1($event)\\\" ></ng4geo-autocomplete>\\n                                        <input type=\\\"hidden\\\" formControlName=\\\"address\\\" name=\\\"address\\\" id=\\\"userAddress\\\">\\n                                    </div>\\n                                 </div>\\n                                \\n                                 <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"userClassLicence\\\"><strong>User Class Licence*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\"  class=\\\"form-control\\\"  formControlName=\\\"userClassLicence\\\"  id=\\\"userClassLicence\\\"  placeholder=\\\"User Class Licence\\\" />  <br>\\n                                      </div>\\n                                  </div>\\n                                \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Individual Employer's image*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <label for=\\\"fileToUpload\\\">\\n                                             <input type=\\\"File\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" (change)=\\\"myUploaderNew($event)\\\">\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"selfieImage\\\" id=\\\"selfieImage\\\" >\\n                                           </label>\\n                                          <div style=\\\"color:green;\\\">{{msg}}</div>\\n                                      </div>\\n                                   </div>\\n                               \\n                      \\n                                 <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Add Individual Employer</button>\\n                                    </div>\\n                                </div>    \\n                               \\n                            </form>\\n                  \\n                         \\n                         \\n                         </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </section>\\n      </div>\\n\\n\\n\\n\\n\\n\\n    \\n\\n\\n\\n\\n\"","module.exports = \".container {\\n  width: 700px; }\\n\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport { HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { ValidationService } from '../../services/validation.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { StateService } from '../../services/state.service';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.service';\ndeclare var google: any;\n\n@Component({\n  selector: 'app-indempadd',\n  templateUrl: './indempadd.component.html',\n  styleUrls: ['./indempadd.component.scss']\n})\nexport class IndempaddComponent implements OnInit {\n  userForm: any;\n  driverid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  options: UploaderOptions;\n  strVal:any;\n  lastChar:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public address: any = '';\n  Countries: any[] = [{'countryName':'--Select--', '_id':''}];\n  States: any[] = [{'stateName':'--Select--', '_id':''}];\n  Cities: any[] = [{'cityName':'--Select--', '_id':''}];\n  gender: any[] = [{'name':'--Select--', 'value':''}, {'name':'Male','value':'Male'}, \n  {'name':'Female','value':'Female'}];\n  default: string = '';;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: EmployeeService,\n    private countryservice: CountryService,\n    private stateservice: StateService,\n    private cityservice: CityService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.driverid = params['driverid'];\n      console.log(this.driverid)\n\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n   \n\n    this.userForm = this.formBuilder.group({\n      userFirstName: ['', Validators.required],\n      userLastName: ['', Validators.required],\n      userEmail: ['', Validators.required],\n      userPhone: ['', Validators.required],\n      userRole:\"IndividualEmployer\",\n      selfRegister : \"no\",\n      userPassword: ['', Validators.required],\n      gender: ['', Validators.required],\n      country: ['', Validators.required],\n      state: ['', ],\n      city: ['', ],\n      address: ['', Validators.required],\n      userClassLicence: ['', Validators.required],\n      selfieImage: ['', Validators.required],\n    \n    });\n    \n    this.userForm.controls['country'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['gender'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['state'].setValue(this.default, {onlySelf: true});\n\n  }\n\n  \n  \n  saveUser() {\n    if(this.userForm.value.userFirstName ==''){\n      this.toastr.error('Usr name is required');\n      return false;\n    }\n  \n    console.log(this.userForm.value)\n    if (this.userForm.dirty && this.userForm.valid) {\n      \n       this.service.createindEmployee(this.userForm.value).subscribe(\n            data => {\n                console.log(data)\n                 this.toastr.success('User added Successfully');\n                 this._router.navigate(['/employee']);\n            },\n            error => {\n              this.toastr.error('Error');\n            });\n    }\n  }\n\n  myUploaderNew(event1) {\n    this.service.uploadLogo(event1).subscribe(\n      data => {\n        console.log(data)\n      this.userForm.controls['selfieImage'].setValue(data['path'].businessLogo);\n     // this.userForm.controls['workIdCard'].setValue(data['path'].businessLogo);\n    //  this.userForm.controls['companyRegistrationNo'].setValue(data['path'].businessLogo);\n     //  this.profile_image = data.data.url;\n       this.msg = 'Uploded successfully';\n      },\n      error => {\n         console.log('error')\n      });\n   }\n    \n  autoCompleteCallback1(data: any): any {\n    if(data.data.formatted_address == ''){\n      this.address =\"\";\n    }else{\n    this.address = JSON.stringify(data.data.formatted_address);\n    }\n    this.userForm.controls['address'].setValue(this.address);\n    \n  }\n\n  ngOnInit() {\n      this.getCountries();     \n  }\n\n  getCountries() {\n    this.countryservice.getCountries().subscribe(res => {\n      this.Countries = res['countries'];\n   });\n  }\n\n  getStates() {\n    let cid = this.userForm.value.country\n    let query = '?country_id='+cid;\n   // let query = '?country_id='+'5b64792806ff811e1f06f0d0';\n    this.stateservice.getStates(query).subscribe(res => {\n      console.log(res)\n      this.States = res['states'];\n   });\n  }\n \n  getCities() {\n    let cid = this.userForm.value.state;\n   // let query = '?state_id=5b6479ab06ff811e1f06f110';\n    let query = '?state_id='+cid;\n    this.cityservice.getCities(query).subscribe(res => {\n      this.Cities = res['cities'];\n   });\n  }\n\n\n}\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Edit Individual Employer</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/employee\\\">\\n                            <i class=\\\"fa fa-list-ol\\\"></i>Employer</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Edit Individual Employer</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n       \\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n\\n      <div class=\\\"col-xl-12\\\">\\n          <section class=\\\"box \\\">\\n                <div class=\\\"content-body \\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-12\\\">\\n                        <div class=\\\"container\\\">\\n                            <form [formGroup]=\\\"userForm\\\" (submit)=\\\"updateUser()\\\">\\n                                 \\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userFirstName\\\"><strong>First Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input  type=\\\"hidden\\\" formControlName=\\\"id\\\" class=\\\"form-control\\\"/> \\n                                        <input  type=\\\"text\\\" formControlName=\\\"userFirstName\\\" class=\\\"form-control\\\" id=\\\"userFirstName\\\" maxlength=\\\"40\\\" placeholder=\\\"First Name\\\"/> \\n                                    </div>\\n                                </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userLastName\\\"><strong>Last Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input  type=\\\"text\\\" formControlName=\\\"userLastName\\\" class=\\\"form-control\\\" id=\\\"userLastName\\\" maxlength=\\\"40\\\" placeholder=\\\"Last Name\\\"/> \\n                                    </div>\\n                                </div>\\n                               \\n                                 <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userEmail\\\"><strong>Email*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"userEmail\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"userEmail\\\" placeholder=\\\"Email\\\"/>  <br>\\n                                       \\n                                   </div>\\n                                </div>\\n                                \\n                                <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"gender\\\"><strong>Gender*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"gender\\\" formControlName=\\\"gender\\\" class=\\\"form-control\\\" >\\n                                            <option *ngFor=\\\"let s of gender\\\" [ngValue]=\\\"s.value\\\">{{ s.name }}</option>\\n                                         </select>\\n                                      </div>\\n                                  </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userPhone\\\"><strong>Mobile No*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        \\n                                        <input type=\\\"text\\\" formControlName=\\\"userPhone\\\" class=\\\"form-control phone_number\\\" maxlength=\\\"10\\\" id=\\\"userPhone\\\" name=\\\"phoneNumber\\\" placeholder=\\\"Phone Number\\\" />\\n                                      \\n                                    </div>\\n                                </div>\\n                               \\n                              <!--  <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"userPassword\\\"><strong>Password*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"userPassword\\\" formControlName=\\\"userPassword\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" />  <br>\\n                                       \\n                                   </div>\\n                                </div>\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"confirmpassword\\\"><strong>Confirm Password*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"password\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"confirmpassword\\\"  placeholder=\\\"Confirm Password\\\" />  <br>\\n                                      \\n                                   </div> \\n                                </div> -->\\n                                \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"country\\\"><strong>Country*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"country\\\" formControlName=\\\"country\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of Countries\\\" [ngValue]=\\\"s._id\\\">{{ s.countryName }}</option>\\n                                        </select> \\n                                     </div>\\n                                  </div>\\n\\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"state\\\"><strong>State Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"state\\\" formControlName=\\\"state\\\"  (change)=\\\"getCities()\\\" class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of States\\\" [ngValue]=\\\"s._id\\\"> {{ s.stateName }} </option>\\n                                          </select> \\n                                       </div>\\n                                    </div>\\n  \\n                                    <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"city\\\"><strong>City Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <select id=\\\"city\\\" formControlName=\\\"city\\\"   class=\\\"form-control\\\" >\\n                                            <option>--Select--</option>\\n                                            <option *ngFor=\\\"let s of Cities\\\" [ngValue]=\\\"s._id\\\"> {{ s.cityName }} </option>\\n                                          </select> \\n                                       </div>\\n                                 </div>\\n\\n                                <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"address\\\"><strong>Address*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"address\\\"  class=\\\"form-control\\\"  name=\\\"address\\\" id=\\\"userAddress\\\">\\n                                    </div>\\n                                 </div>\\n                                \\n                                <!-- <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"userClassLicence\\\"><strong>User Class Licence*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\"  class=\\\"form-control\\\"  formControlName=\\\"userClassLicence\\\"  id=\\\"userClassLicence\\\"  placeholder=\\\"User Class Licence\\\" />  <br>\\n                                      </div>\\n                                  </div>-->\\n                                \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Individual Employer's image*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <label for=\\\"fileToUpload\\\">\\n                                             <input type=\\\"File\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" (change)=\\\"myUploaderNew($event)\\\">\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"selfieImage\\\" id=\\\"selfieImage\\\" >\\n                                           </label>\\n                                          <div style=\\\"color:green;\\\">{{msg}}</div>\\n                                      </div>\\n                                   </div>\\n\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Document*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <label for=\\\"documentImage\\\">\\n                                             <input type=\\\"File\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" (change)=\\\"myUploaderNewd($event)\\\">\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"documentImage\\\" id=\\\"documentImage\\\" >\\n                                           </label>\\n                                          <div style=\\\"color:green;\\\">{{msg1}}</div>\\n                                      </div>\\n                                   </div>\\n                               \\n                      \\n                                 <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Update Individual Employer</button>\\n                                    </div>\\n                                </div>    \\n                               \\n                            </form>\\n                  \\n                         \\n                         \\n                         </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </section>\\n      </div>\\n\\n\\n\\n\\n\\n\\n    \\n\\n\\n\\n\\n\"","module.exports = \".container {\\n  width: 700px; }\\n\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport { HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { ValidationService } from '../../services/validation.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { StateService } from '../../services/state.service';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.service';\ndeclare var google: any;\n\n@Component({\n  selector: 'app-indempedit',\n  templateUrl: './indempedit.component.html',\n  styleUrls: ['./indempedit.component.scss']\n})\nexport class IndempeditComponent implements OnInit {\n\n  userForm: any;\n  driverid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  msg1: any = null;\n  options: UploaderOptions;\n  strVal:any;\n  Employees:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public address: any = '';\n  Countries: any[] = [{'countryName':'--Select--', '_id':''}];\n  States: any[] = [{'stateName':'--Select--', '_id':''}];\n  Cities: any[] = [{'cityName':'--Select--', '_id':''}];\n  gender: any[] = [{'name':'--Select--', 'value':''}, {'name':'Male','value':'Male'}, \n  {'name':'Female','value':'Female'}];\n  default: string = '';;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: EmployeeService,\n    private countryservice: CountryService,\n    private stateservice: StateService,\n    private cityservice: CityService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.driverid = params['driverid'];\n      console.log(this.driverid)\n\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n   \n\n    this.userForm = this.formBuilder.group({\n      id: [this.driverid, Validators.required],\n      userFirstName: ['', Validators.required],\n      userLastName: ['', Validators.required],\n      userEmail: ['', Validators.required],\n      userPhone: ['', Validators.required],\n      userRole:['', Validators.required],\n      gender: ['', Validators.required],\n      country: ['', Validators.required],\n      state: ['', ],\n      city: ['', ],\n      address: ['', Validators.required],\n     // userClassLicence: ['', Validators.required],\n      selfieImage: ['', Validators.required],\n      documentImage: ['', Validators.required]\n    \n    });\n    \n    this.userForm.controls['country'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['gender'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['state'].setValue(this.default, {onlySelf: true});\n\n  }\n\n   getUsers() {\n    let query = '/'+this.driverid;\n    this.service.getEmployee(query).subscribe(res => {\n    \n      this.Employees = res['employer'].user;\n\n      this.getStates(this.Employees.country._id);\n      this.getCities(this.Employees.state._id);\n    \n    // console.log(res)\n         console.log(this.Employees)\n        this.userForm.controls['id'].setValue( this.Employees._id, {onlySelf: true});\n        this.userForm.controls['userFirstName'].setValue( this.Employees.userFirstName, {onlySelf: true});\n        this.userForm.controls['userLastName'].setValue( this.Employees.userLastName, {onlySelf: true});\n        this.userForm.controls['userEmail'].setValue( this.Employees.userEmail, {onlySelf: true});\n        this.userForm.controls['userPhone'].setValue( this.Employees.userPhone, {onlySelf: true});\n        this.userForm.controls['userRole'].setValue( this.Employees.userRole, {onlySelf: true});\n        this.userForm.controls['country'].setValue( this.Employees.country._id, {onlySelf: true});\n        this.userForm.controls['state'].setValue( this.Employees.state._id, {onlySelf: true});\n        this.userForm.controls['city'].setValue( this.Employees.city._id, {onlySelf: true});\n        this.userForm.controls['gender'].setValue( this.Employees.gender, {onlySelf: true});\n        this.userForm.controls['address'].setValue( this.Employees.userAddress, {onlySelf: true});\n        this.userForm.controls['selfieImage'].setValue( this.Employees.selfieImage, {onlySelf: true});\n        this.userForm.controls['documentImage'].setValue( this.Employees.documentImage, {onlySelf: true});\n      //  this.userForm.controls['userClassLicence'].setValue( res['employer'].userClassLicence, {onlySelf: true});\n      \n\n      });\n  }\n  \n  updateUser() {\n    if(this.userForm.value.userFirstName ==''){\n      this.toastr.error('Usr name is required');\n      return false;\n    }\n // alert(this.userForm.value.id)\n    console.log(this.userForm.value)\n  //  if (this.userForm.valid) {\n     // alert(this.userForm.value.id)\n      let query = '/'+this.userForm.value.id;\n       this.service.updateindEmployee(this.userForm.value, query).subscribe(\n            data => {\n                console.log(data)\n                 this.toastr.success('User Updated Successfully');\n                 this._router.navigate(['/employee']);\n            },\n            error => {\n              this.toastr.error('Error');\n            });\n  //  }\n  }\n\n  myUploaderNew(event1) {\n    this.service.uploadLogo(event1).subscribe(\n      data => {\n        console.log(data)\n      this.userForm.controls['selfieImage'].setValue(data['path'].businessLogo);\n   //   this.userForm.controls['documentImage'].setValue(data['path'].businessLogo);\n      //  this.profile_image = data.data.url;\n       this.msg = 'Uploded successfully';\n      },\n      error => {\n         console.log('error')\n      });\n   }\n\n   myUploaderNewd(event1) {\n    this.service.uploadLogo(event1).subscribe(\n      data => {\n        console.log(data)\n     // this.userForm.controls['selfieImage'].setValue(data['path'].businessLogo);\n      this.userForm.controls['documentImage'].setValue(data['path'].businessLogo);\n      //  this.profile_image = data.data.url;\n       this.msg1 = 'Uploded successfully';\n      },\n      error => {\n         console.log('error')\n      });\n   }\n    \n  autoCompleteCallback1(data: any): any {\n    if(data.data.formatted_address == ''){\n      this.address =\"\";\n    }else{\n    this.address = JSON.stringify(data.data.formatted_address);\n    }\n    this.userForm.controls['address'].setValue(this.address);\n    \n  }\n\n  ngOnInit() {\n      this.getUsers();     \n      this.getCountries();     \n  }\n\n  getCountries() {\n    this.countryservice.getCountries().subscribe(res => {\n      this.Countries = res['countries'];\n   });\n  }\n\n  getStates(id) {\n    let cid;\n    if(this.userForm.value.country==''){\n       cid = id;\n    }else{\n       cid = this.userForm.value.country;\n    }\n     let query = '?country_id='+cid;\n   // let query = '?country_id='+'5b64792806ff811e1f06f0d0';\n    this.stateservice.getStates(query).subscribe(res => {\n      console.log(res)\n      this.States = res['states'];\n   });\n  }\n \n  getCities(id) {\n    let cid;\n    if(this.userForm.value.state==''){\n       cid = id;\n    }else{\n       cid = this.userForm.value.state;\n    }\n    let query = '?state_id='+cid;\n    this.cityservice.getCities(query).subscribe(res => {\n      this.Cities = res['cities'];\n   });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { environment as env } from '../../environments/environment';\nimport { Config } from '../services/config';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  config = new Config;\n  constructor(\n      private http: HttpClient, \n      private router: Router \n    ) {}\n\n  getEmployee(query=\"\") {\n        const uri = env.APIURL + '/employer'+query;\n        return this\n            .http\n            .get(uri);\n  }\n\n  createindEmployee(data) {\n    const uri = env.APIURL + '/users';\n   return this\n        .http\n        .post(uri, data);\n  }\n\n  updateindEmployee(data,query=\"\") {\n    const uri = env.APIURL + '/users'+query;\n    return this\n         .http\n         .put(uri, data);\n   }\n\n  createcorpEmployee(data) {\n   const uri = env.APIURL + '/users';\n   return this\n        .http\n        .post(uri, data);\n  }\n\n  updatecorpEmployee(data,query=\"\") {\n   // alert(query)\n    const uri = env.APIURL + '/users'+query;\n    return this\n         .http\n         .put(uri, data);\n   }\n\n  uploadLogo(event) {\n    const uri = env.APIURL +'/users/images';\n   const fileList: FileList = event.target.files;\n\n   const file = fileList[0];\n\n   const formData = new FormData();\n   formData.append('businessLogo', file, file.name);\n   return this\n           .http\n           .post(uri,formData);            \n    }\n}\n"],"sourceRoot":""}