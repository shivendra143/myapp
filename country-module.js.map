{"version":3,"sources":["webpack:///./src/app/country/country.module.ts","webpack:///./src/app/country/countryadd/countryadd.component.html","webpack:///./src/app/country/countryadd/countryadd.component.scss","webpack:///./src/app/country/countryadd/countryadd.component.ts","webpack:///./src/app/country/countryedit/countryedit.component.html","webpack:///./src/app/country/countryedit/countryedit.component.scss","webpack:///./src/app/country/countryedit/countryedit.component.ts","webpack:///./src/app/country/countryinfo/countryinfo.component.html","webpack:///./src/app/country/countryinfo/countryinfo.component.scss","webpack:///./src/app/country/countryinfo/countryinfo.component.ts","webpack:///./src/app/services/config.ts","webpack:///./src/app/services/country.service.ts"],"names":[],"mappings":"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","file":"country-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CountryinfoComponent } from './countryinfo/countryinfo.component';\nimport { CountryaddComponent } from './countryadd/countryadd.component';\nimport { CountryeditComponent } from './countryedit/countryedit.component';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutModule } from '../theme/layouts/layout.module';\nimport { DefaultComponent } from '../theme/pages/default/default.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxUploaderModule } from 'ngx-uploader';\nimport { FileUploadModule } from 'primeng/components/fileupload/fileupload';\nimport { Ng2PaginationModule } from 'ng2-pagination';\nimport { ValidationService } from '../services/validation.service';\nimport { AgmCoreModule } from '@agm/core';\nimport { ScheduleModule } from 'primeng/primeng';\nimport { CalendarModule } from 'primeng/primeng';\nimport { Ng4GeoautocompleteModule } from 'ng4-geoautocomplete';\nimport { ToastrModule } from 'ngx-toastr';\n\nconst routes: Routes = [\n    {\n        'path': '',\n        'component': DefaultComponent,\n        'children': [\n            {\n                'path': '',\n                'component': CountryinfoComponent,\n            },\n            {\n                'path': 'edit-country/:driverid',\n                'component': CountryeditComponent,\n              },\n              {\n                'path': 'add-country',\n                'component': CountryaddComponent,\n              },\n              {\n                'path': 'view-country/:driverid',\n                'component': CountryeditComponent,\n              }\n        ],\n    },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyAp5vIeGvze_ZWYwee-fVE3JS3LYnREZP0\",\n      libraries: [\"places\"]\n    }),\n    ToastrModule.forRoot(),\n    NgbModule.forRoot(),\n    Ng4GeoautocompleteModule.forRoot(),\n\t  RouterModule.forChild(routes),\n    LayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxUploaderModule,\n    Ng2PaginationModule,\n    FileUploadModule,\n    ScheduleModule,\n    CalendarModule\n  ],\n  declarations: [CountryinfoComponent, CountryaddComponent, CountryeditComponent]\n})\nexport class CountryModule { }\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Add Country</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/country\\\">\\n                            <i class=\\\"fa fa-list-ol\\\"></i>Country Lists</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Add Country</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n     \\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n    \\n      <div class=\\\"col-xl-12\\\">\\n            <section class=\\\"box \\\">\\n                  <div class=\\\"content-body \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                          <div class=\\\"container\\\">\\n                            <form [formGroup]=\\\"userForm\\\" (submit)=\\\"saveUser()\\\">\\n                                 \\n                                <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"countryName\\\"><strong>Country Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <ng4geo-autocomplete (componentCallback)=\\\"autoCompleteCallback1($event)\\\" ></ng4geo-autocomplete>\\n                                        <input type=\\\"hidden\\\" formControlName=\\\"countryName\\\" name=\\\"countryName\\\" id=\\\"address\\\">\\n                                        <input type=\\\"hidden\\\" formControlName=\\\"latitude\\\" name=\\\"lat\\\" id=\\\"lat\\\" >\\n                                        <input type=\\\"hidden\\\" formControlName=\\\"longitude\\\" name=\\\"lng\\\" id=\\\"lng\\\" >  </div>\\n                                  </div>\\n  \\n                                  \\n                        \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"countryCode\\\"><strong>Country Code*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"countryCode\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"countryCode\\\"  placeholder=\\\"Country Code\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"capital\\\"><strong>Capital</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"capital\\\"  class=\\\"form-control\\\" max=\\\"100\\\" id=\\\"capital\\\"  placeholder=\\\"Country Code\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name_official\\\"><strong>Office address</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"name_official\\\"  class=\\\"form-control\\\" max=\\\"100\\\" id=\\\"name_official\\\"  placeholder=\\\"Office address\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"dialCode\\\"><strong>Dial Code</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"dialCode\\\"  class=\\\"form-control\\\" max=\\\"100\\\" id=\\\"dialCode\\\"  placeholder=\\\"Dial Code\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"countryStatus\\\"><strong>Status*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                            <select id=\\\"countryStatus\\\" formControlName=\\\"countryStatus\\\" class=\\\"form-control\\\" >\\n                                                    <option *ngFor=\\\"let s of allstatus\\\" [ngValue]=\\\"s.value\\\">{{ s.name }}</option>\\n                                            </select>\\n                                          \\n                                      </div>\\n                                   </div>\\n  \\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Country Logo*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <label for=\\\"fileToUpload\\\">\\n                                             <input type=\\\"File\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" (change)=\\\"myUploaderNew($event)\\\">\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"flag_27\\\" id=\\\"flag_27\\\" >\\n                                           </label>\\n                                          <div style=\\\"color:green;\\\">{{msg}}</div>\\n                                      </div>\\n                                   </div>\\n\\n                                 <!--  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Country Logo*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <div class=\\\"drop-container\\\" ngFileDrop [options]=\\\"options\\\" (uploadOutput)=\\\"onUploadOutput($event)\\\" [uploadInput]=\\\"uploadInput\\\" [ngClass]=\\\"{ 'is-drop-over': dragOver }\\\">\\n                                           <p-fileUpload  customUpload=\\\"true\\\"\\n                                          accept=\\\"image/*\\\" (uploadHandler)=\\\"myUploader($event)\\\"></p-fileUpload>\\n                                        </div>\\n                                        \\n                                          <div style=\\\"color:green;\\\"></div>\\n                                          \\n                                       </div>\\n                                   </div> -->\\n                        \\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Add Country</button>\\n                                      </div>\\n                                  </div>    \\n                                 \\n                              </form>\\n                    \\n                           \\n                           </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </section>\\n        </div>\\n\\n\\n\\n\\n\\n\\n    \"","module.exports = \".container {\\n  width: 700px; }\\n\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport { FileUploadModule, FileUpload } from 'primeng/components/fileupload/fileupload';\nimport { HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { MapsAPILoader } from '@agm/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { CountryService } from '../../services/country.service';\n\n\n\n@Component({\n  selector: 'app-countryadd',\n  templateUrl: './countryadd.component.html',\n  styleUrls: ['./countryadd.component.scss']\n})\nexport class CountryaddComponent implements OnInit {\n\n  userForm: any;\n  countryid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  options: UploaderOptions;\n  strVal:any;\n  lastChar:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public countryName: any = '';\n  allstatus: any[] = [{'name':'--Select--', 'value':''}, {'name':'Active','value':'active'}, \n  {'name':'InActive','value':'inactive'}];\n  default: string = '';\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: CountryService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.countryid = params['driverid'];\n      console.log(this.countryid)\n\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n    this.userForm = this.formBuilder.group({\n      'countryCode': ['', Validators.required],\n      'countryName': ['', Validators.required],\n      'capital': ['', Validators.required],\n      'latitude': ['', ],\n      'longitude': ['', ],\n      'latlng':['',],\n      'timezones':['',],\n      'dialCode':['', Validators.required],\n      'flag_128':['',],\n      'flag_32':['', ],\n      'name_official':['', Validators.required],\n      'countryStatus': ['', Validators.required],\n      'countryLogo': ['', ],\n      'flag_27': ['', ]\n     \n    });\n    this.userForm.controls['countryStatus'].setValue(this.default, {onlySelf: true});\n   \n  }\n\n  \n  \n  saveUser() {\n    console.log(this.userForm.value)\n    if(this.userForm.value.countryName == ''){\n      this.toastr.error('Usr name is required');\n    }\n    if (this.userForm.dirty && this.userForm.valid) {\n         \n        this.service.addCountries(this.userForm.value).subscribe(\n            data => {\n                console.log(data)\n                this.toastr.success('Country added Successfully');\n                this._router.navigate(['/country']);\n            },\n            error => {\n               console.log('error')\n            });\n       \n    }\n  }\n    \n  autoCompleteCallback1(data: any): any {\n    console.log(data)\n    if(data.data.formatted_address == ''){\n      this.countryName =\"\";\n    }else{\n    this.countryName = data.data.formatted_address;\n    }\n    this.lat = JSON.stringify(data.data.geometry['location'].lat);\n    this.lng = JSON.stringify(data.data.geometry['location'].lng);\n    this.userForm.controls['countryName'].setValue(this.countryName);\n    this.userForm.controls['latitude'].setValue(this.lat);\n    this.userForm.controls['longitude'].setValue(this.lng);\n    this.userForm.controls['latlng'].setValue([this.lat,this.lng]);\n    \n    console.log(this.countryName)\n    console.log(this.lat)\n    console.log(this.lng)\n    \n  }\n    ngOnInit() {\n     \n      \n     }\n  \n     /*myUploader(event1) {\n       \n      this.service.uplodpic(event1).subscribe(\n        data => {\n          //console.log(data.path.flag_128)\n         // this.userForm.controls['countryLogo'].setValue('');\n        },\n        error => {\n           console.log('error')\n        });\n     \n     }*/\n   \n     myUploaderNew(event1) {\n      this.service.uploadLogo(event1).subscribe(\n        data => {\n        this.userForm.controls['flag_128'].setValue(data['path'].flag_128);\n        this.userForm.controls['flag_27'].setValue(data['path'].flag_128);\n        this.userForm.controls['countryLogo'].setValue(data['path'].flag_128);\n        //  this.profile_image = data.data.url;\n         this.msg = 'Uploded successfully';\n        },\n        error => {\n           console.log('error')\n        });\n     }\n\n}\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Edit Country</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/country\\\">\\n                            <i class=\\\"fa fa-list-ol\\\"></i>Country Lists</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Add Country</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n     \\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n    \\n      <div class=\\\"col-xl-12\\\">\\n            <section class=\\\"box \\\">\\n                  <div class=\\\"content-body \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                          <div class=\\\"container\\\">\\n                            <form [formGroup]=\\\"userForm\\\" (submit)=\\\"saveUser()\\\">\\n                                 \\n                                <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"countryName\\\"><strong>Country Name*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                        <ng4geo-autocomplete (componentCallback)=\\\"autoCompleteCallback1($event)\\\" ></ng4geo-autocomplete>\\n                                        <input type=\\\"hidden\\\" formControlName=\\\"countryName\\\" name=\\\"countryName\\\" id=\\\"address\\\">\\n                                        <input type=\\\"hidden\\\" formControlName=\\\"latitude\\\" name=\\\"lat\\\" id=\\\"lat\\\" >\\n                                        <input type=\\\"hidden\\\" formControlName=\\\"longitude\\\" name=\\\"lng\\\" id=\\\"lng\\\" >  </div>\\n                                  </div>\\n  \\n                                  \\n                        \\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"countryCode\\\"><strong>Country Code*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"countryCode\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"countryCode\\\"  placeholder=\\\"Country Code\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"capital\\\"><strong>Capital</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"capital\\\"  class=\\\"form-control\\\" max=\\\"100\\\" id=\\\"capital\\\"  placeholder=\\\"Country Code\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name_official\\\"><strong>Office address</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"name_official\\\"  class=\\\"form-control\\\" max=\\\"100\\\" id=\\\"name_official\\\"  placeholder=\\\"Office address\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"dialCode\\\"><strong>Dial Code</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <input type=\\\"text\\\" formControlName=\\\"dialCode\\\"  class=\\\"form-control\\\" max=\\\"100\\\" id=\\\"dialCode\\\"  placeholder=\\\"Dial Code\\\" />  <br>\\n                                         \\n                                     </div>\\n                                  </div>\\n                                  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"countryStatus\\\"><strong>Status*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                            <select id=\\\"countryStatus\\\" formControlName=\\\"countryStatus\\\" class=\\\"form-control\\\" >\\n                                                    <option *ngFor=\\\"let s of allstatus\\\" [ngValue]=\\\"s.value\\\">{{ s.name }}</option>\\n                                            </select>\\n                                          \\n                                      </div>\\n                                   </div>\\n  \\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Country Logo*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <label for=\\\"fileToUpload\\\">\\n                                             <input type=\\\"File\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" id=\\\"fileToUpload\\\" (change)=\\\"myUploaderNew($event)\\\">\\n                                            <input type=\\\"hidden\\\" formControlName=\\\"flag_27\\\" id=\\\"flag_27\\\" >\\n                                           </label>\\n                                          <div style=\\\"color:green;\\\">{{msg}}</div>\\n                                      </div>\\n                                   </div>\\n\\n                                 <!--  <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong>Country Logo*</strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <div class=\\\"drop-container\\\" ngFileDrop [options]=\\\"options\\\" (uploadOutput)=\\\"onUploadOutput($event)\\\" [uploadInput]=\\\"uploadInput\\\" [ngClass]=\\\"{ 'is-drop-over': dragOver }\\\">\\n                                           <p-fileUpload  customUpload=\\\"true\\\"\\n                                          accept=\\\"image/*\\\" (uploadHandler)=\\\"myUploader($event)\\\"></p-fileUpload>\\n                                        </div>\\n                                        \\n                                          <div style=\\\"color:green;\\\"></div>\\n                                          \\n                                       </div>\\n                                   </div> -->\\n                        \\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Add User</button>\\n                                      </div>\\n                                  </div>    \\n                                 \\n                              </form>\\n                    \\n                           \\n                           </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </section>\\n        </div>\\n\\n\\n\\n\\n\\n\\n    \"","module.exports = \".container {\\n  width: 700px; }\\n\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport { FileUploadModule, FileUpload } from 'primeng/components/fileupload/fileupload';\nimport {HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { MapsAPILoader } from '@agm/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { CountryService } from '../../services/country.service';\n\n@Component({\n  selector: 'app-countryedit',\n  templateUrl: './countryedit.component.html',\n  styleUrls: ['./countryedit.component.scss']\n})\nexport class CountryeditComponent implements OnInit {\n\n  userForm: any;\n  countryid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  options: UploaderOptions;\n  strVal:any;\n  lastChar:any;  \n  Countries:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public countryName: any = '';\n  allstatus: any[] = [{'name':'--Select--', 'value':''}, {'name':'Active','value':'active'}, \n  {'name':'InActive','value':'inactive'}];\n  default: string = '';\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: CountryService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.countryid = params['driverid'];\n      console.log(this.countryid)\n\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n    this.userForm = this.formBuilder.group({\n      'id': [this.countryid, Validators.required],\n      'countryCode': ['', Validators.required],\n      'countryName': ['', Validators.required],\n      'capital': ['', Validators.required],\n      'latitude': ['', ],\n      'longitude': ['', ],\n      'latlng':['',],\n      'timezones':['',],\n      'dialCode':['', Validators.required],\n      'flag_128':['',],\n      'flag_32':['', ],\n      'name_official':['', Validators.required],\n      'countryStatus': ['', Validators.required],\n      'countryLogo': ['', ],\n      'flag_27': ['', ]\n     \n    });\n    this.userForm.controls['countryStatus'].setValue(this.default, {onlySelf: true});\n   \n  }\n\n  \n  \n  saveUser() {\n    console.log(this.userForm.value)\n    if(this.userForm.value.countryName == ''){\n      this.toastr.error('Usr name is required');\n    }\n    if (this.userForm.dirty && this.userForm.valid) {\n      let query = \"/\"+this.userForm.value.id;\n        this.service.updateCountries(this.userForm.value,query).subscribe(\n            data => {\n                console.log(data)\n                this.toastr.success('Country updated Successfully');\n                this._router.navigate(['/country']);\n            },\n            error => {\n               console.log('error')\n            });\n       \n    }\n  }\n    \n  autoCompleteCallback1(data: any): any {\n    console.log(data)\n    if(data.data.formatted_address == ''){\n      this.countryName =\"\";\n    }else{\n    this.countryName = data.data.formatted_address;\n    }\n    this.lat = JSON.stringify(data.data.geometry['location'].lat);\n    this.lng = JSON.stringify(data.data.geometry['location'].lng);\n    this.userForm.controls['countryName'].setValue(this.countryName);\n    this.userForm.controls['latitude'].setValue(this.lat);\n    this.userForm.controls['longitude'].setValue(this.lng);\n    this.userForm.controls['latlng'].setValue([this.lat,this.lng]);\n    \n    console.log(this.countryName)\n    console.log(this.lat)\n    console.log(this.lng)\n    \n  }\n    ngOnInit() {\n      this.getCountries();\n    }\n  \n   \n   \n     myUploaderNew(event1) {\n      this.service.uploadLogo(event1).subscribe(\n        data => {\n        this.userForm.controls['flag_128'].setValue(data['path'].flag_128);\n        this.userForm.controls['flag_27'].setValue(data['path'].flag_128);\n        this.userForm.controls['countryLogo'].setValue(data['path'].flag_128);\n        //  this.profile_image = data.data.url;\n         this.msg = 'Uploded successfully';\n        },\n        error => {\n           console.log('error')\n        });\n     }\n     \n     getCountries() {\n       let query = \"/\"+this.countryid;\n        this.service.getCountries(query).subscribe(res => {\n        console.log(res)\n        this.Countries = res['countries'];\n        \n       this.userForm.controls['id'].setValue( this.Countries.id, {onlySelf: true});\n       this.userForm.controls['countryCode'].setValue( this.Countries.countryCode, {onlySelf: true});\n       this.userForm.controls['countryName'].setValue( this.Countries.countryName, {onlySelf: true});\n       this.userForm.controls['capital'].setValue( this.Countries.capital, {onlySelf: true});\n       this.userForm.controls['latitude'].setValue( this.Countries.latitude, {onlySelf: true});\n       this.userForm.controls['longitude'].setValue( this.Countries.longitude, {onlySelf: true});\n       this.userForm.controls['dialCode'].setValue( this.Countries.dialCode, {onlySelf: true});\n       this.userForm.controls['countryStatus'].setValue( this.Countries.countryStatus, {onlySelf: true});\n       this.userForm.controls['countryLogo'].setValue( this.Countries.flag_128, {onlySelf: true});\n       this.userForm.controls['name_official'].setValue( this.Countries.name_official, {onlySelf: true});\n      \n       \n      \n     });\n\n     \n    }\n\n    \n\n}\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Manage Country Lists</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Country Lists</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n        <div class=\\\"custum-links\\\" style=\\\"position: absolute; right: 15px; z-index: 1\\\">\\n            <a routerLink=\\\"/country/add-country\\\" style=\\\"font-weight: bold;\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> Add Country </a> &nbsp;\\n           \\n        </div>\\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n\\n      <div class=\\\"col-xl-12\\\">\\n          <section class=\\\"box \\\">\\n                <div class=\\\"content-body \\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-12\\\">\\n                        <div class=\\\"container\\\" style=\\\"margin-left: 0;max-width: 1299px;\\\">\\n\\n                          <div class=\\\"pagination-data\\\" style=\\\"overflow: scroll;height:600px;min-height:600px;\\\">\\n  \\n                          <table id=\\\"example-11\\\" class=\\\"display table table-bordered table-hover table-condensed dataTable no-footer\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n                              <thead>\\n                                  <tr>\\n                                    <th>S.No.</th>\\n                                    <th> Country Name </th>\\n                                    <th> Country Code </th>\\n                                    <th> Country Logo </th>\\n                                    <th> Country Status </th>\\n                                    <th> Capital </th>\\n                                    <th> Created At</th>\\n                                    <th> DialCode </th>\\n                                    <th>Action</th>\\n                                  </tr>\\n                              </thead>\\n                              <tbody>\\n                                <tr *ngFor=\\\"let conlist of Countries; let i=index\\\" class=\\\"ng-scope\\\">\\n                                      <td class=\\\"ng-binding\\\"> {{i+1}} </td>\\n                                      <td class=\\\"ng-binding\\\"> {{conlist.countryName}} </td>\\n                                      <td class=\\\"ng-binding\\\"> {{conlist.countryCode}} </td>\\n                                      <td class=\\\"ng-binding\\\"> {{conlist.countryLogo}} </td>\\n                                      <td class=\\\"ng-binding\\\">  {{conlist.countryStatus}} </td>\\n                                      <td class=\\\"ng-binding\\\"> {{conlist.capital}} </td>\\n                                      <td class=\\\"ng-binding\\\"> {{conlist.createdAt}} </td>\\n                                      <td class=\\\"ng-binding\\\"> {{conlist.dialCode}} </td>\\n                                      <td style=\\\"min-width:120px;\\\">\\n                                          <i class=\\\"fa fa-trash ng-pristine text-danger ng-untouched ng-valid ng-empty\\\" ng-model=\\\"_id\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal-delete\\\" aria-hidden=\\\"true\\\" title=\\\"Delete user\\\" (click)=\\\"deleteCountries(conlist._id)\\\"></i> &nbsp;\\n\\n                                          <a [routerLink]=\\\"['edit-country', conlist._id]\\\">\\n                                              <i class=\\\"fa fa-eye text-primary\\\" aria-hidden=\\\"true\\\" title=\\\"view user\\\"></i>\\n                                          </a> &nbsp; <a [routerLink]=\\\"['edit-country', conlist._id]\\\">\\n                                              <i class=\\\"fa fa-edit text-success\\\" aria-hidden=\\\"true\\\" title=\\\"edit user\\\"></i>\\n                                          </a>\\n                                      </td>\\n                                  </tr>\\n\\n                              </tbody>\\n                          </table>\\n                          <!-- ********************************************** -->\\n                          </div>\\n                         </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </section>\\n      </div>\\n\\n\\n\\n\\n\\n\\n    \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../../services/country.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-countryinfo',\n  templateUrl: './countryinfo.component.html',\n  styleUrls: ['./countryinfo.component.scss']\n})\nexport class CountryinfoComponent implements OnInit {\n  Countries: any[];\n  constructor(\n    private service: CountryService,\n    private toastr: ToastrService,\n   ) { }\n\n  ngOnInit() {\n    this.getCountries();\n  }\n\n  getCountries() {\n    this.service.getCountries().subscribe(res => {\n      this.Countries = res['countries'];\n   });\n  }\n\n  deleteCountries(id) {\n     let query = '/'+id;\n      this.service.deleteCountries(query).subscribe(res => {\n       \n        this.toastr.success('State deleted Successfully');\n        this.getCountries();\n        });\n  }\n\n}\n","import { Headers } from '@angular/http';\r\n\r\nexport class Config {\r\n    headerOptions: any = {\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json'\r\n        })\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { environment as env } from '../../environments/environment';\nimport { Config } from '../services/config';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n\n  config = new Config;\n  constructor(private http: HttpClient ) {}\n\n  getCountries(query=\"\") {\n  const uri = env.APIURL + '/countries'+query;\n    return this\n        .http\n        .get(uri);\n  }\n\n  addCountries(data) {\n    const uri = env.APIURL + '/countries';\n    return this\n        .http\n        .post(uri, data);\n  }\n  updateCountries(data,query=\"\") {\n    const uri = env.APIURL + '/countries'+query;\n    return this\n        .http\n        .put(uri, data);\n  }\n  deleteCountries(query=\"\") {\n    const uri = env.APIURL + '/countries'+query;\n    return this\n        .http\n        .delete(uri);\n  }\n\n /* uplodpic(event) {\n    console.log(event)\n       const uri = env.APIURL +'/users/images';\n      const fileList: FileList = event.files;\n      if (fileList.length > 0) {\n          const file = fileList[0];\n  \n          const formData = new FormData();\n          formData.append('flag_128', file, file.name);\n          return this\n          .http\n          .post(uri, formData)\n          .map((res: Response) => {\n              return res.json();\n          })\n          .catch((error: Response) => {\n              error = error.json();\n              return Observable.throw(error);\n          });\n         \n      }\n  }*/\n\n  uploadLogo(event) {\n         const uri = env.APIURL +'/users/images';\n        const fileList: FileList = event.target.files;\n    \n        const file = fileList[0];\n    \n        const formData = new FormData();\n        formData.append('flag_128', file, file.name);\n        return this\n                .http\n                .post(uri,formData);            \n     }\n\n}\n"],"sourceRoot":""}