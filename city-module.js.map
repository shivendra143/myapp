{"version":3,"sources":["webpack:///./src/app/city/addcity/addcity.component.html","webpack:///./src/app/city/addcity/addcity.component.scss","webpack:///./src/app/city/addcity/addcity.component.ts","webpack:///./src/app/city/city.module.ts","webpack:///./src/app/city/cityinfo/cityinfo.component.html","webpack:///./src/app/city/cityinfo/cityinfo.component.scss","webpack:///./src/app/city/cityinfo/cityinfo.component.ts","webpack:///./src/app/city/editcity/editcity.component.html","webpack:///./src/app/city/editcity/editcity.component.scss","webpack:///./src/app/city/editcity/editcity.component.ts","webpack:///./src/app/services/city.service.ts","webpack:///./src/app/services/config.ts","webpack:///./src/app/services/country.service.ts","webpack:///./src/app/services/state.service.ts"],"names":[],"mappings":"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","file":"city-module.js","sourcesContent":["module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Add City</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/city\\\">\\n                            <i class=\\\"fa fa-list-ol\\\"></i>City Lists</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Add City</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n     \\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n    \\n      <div class=\\\"col-xl-12\\\">\\n            <section class=\\\"box \\\">\\n                  <div class=\\\"content-body \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                          <div class=\\\"container\\\">\\n                            <form [formGroup]=\\\"userForm\\\" (submit)=\\\"saveUser()\\\">\\n                                 \\n                              <div  class=\\\"form-group row\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <label class=\\\"mt-2\\\" for=\\\"country\\\"><strong>Country*</strong></label>\\n                                </div>\\n                                <div  class=\\\"col-sm-9\\\">\\n                                      <select id=\\\"country\\\" formControlName=\\\"country\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                              <option>--Select--</option>\\n                                              <option *ngFor=\\\"let s of Countries\\\" [ngValue]=\\\"s._id\\\"> {{ s.countryName }}</option>\\n                                      </select>    \\n                                     \\n                                </div>\\n                              </div>\\n                               \\n                               <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"countryCode\\\"><strong>State Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"country\\\" formControlName=\\\"stateName\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                          <option>--Select--</option>\\n                                          <option *ngFor=\\\"let s of States\\\" [ngValue]=\\\"s._id\\\"> {{ s.stateName }}</option>\\n                                        </select> \\n                                  </div>\\n                               </div>\\n\\n                               <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"cityName\\\"><strong>City Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"cityName\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"cityName\\\"  placeholder=\\\"City Name\\\" />  <br>\\n                                      \\n                                  </div>\\n                               </div>\\n                                \\n                                \\n      \\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Add City</button>\\n                                      </div>\\n                                  </div>    \\n                                 \\n                              </form>\\n                    \\n                           \\n                           </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </section>\\n        </div>\\n\\n\\n\\n\\n\\n\\n    \"","module.exports = \"\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport { HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { MapsAPILoader } from '@agm/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { StateService } from '../../services/state.service';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.service';\n\n@Component({\n  selector: 'app-addcity',\n  templateUrl: './addcity.component.html',\n  styleUrls: ['./addcity.component.scss']\n})\nexport class AddcityComponent implements OnInit {\n\n  userForm: any;\n  driverid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  options: UploaderOptions;\n  strVal:any;\n  lastChar:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public countryName: any = '';\n\n  Countries: any[] = [{'country':'--Select--', '_id':''}];\n  States: any[] = [{'stateName':'--Select--', '_id':''}];\n  default: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: CityService,\n    private countryservice: CountryService,\n    private stateservice: StateService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.driverid = params['driverid'];\n     // console.log(this.driverid)\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n    this.userForm = this.formBuilder.group({\n      'stateName': ['', Validators.required],\n      'country': ['', ],\n      'cityName': ['', ]     \n     });\n    this.userForm.controls['stateName'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['country'].setValue(this.default, {onlySelf: true});\n   \n  }\n\n  \n  \n  saveUser() {\n    console.log(this.userForm.value)\n    if(this.userForm.value.country == ''){\n      this.toastr.error('Country is required');\n      return false;\n    }\n    if (this.userForm.dirty && this.userForm.valid) {\n         \n        this.service.addCities(this.userForm.value).subscribe(\n            data => {\n                this.toastr.success('City added Successfully');\n                this._router.navigate(['/city']);\n            },\n            error => {\n              this.toastr.error('error')\n            });\n       \n    }\n  }\n     \n  getCountries() {\n    this.countryservice.getCountries().subscribe(res => {\n      this.Countries = res['countries'];\n   });\n  }\n\n  getStates() {\n    let cid = this.userForm.value.country\n    let query = '?country_id='+cid;\n   // let query = '?country_id='+'5b64792806ff811e1f06f0d0';\n    this.stateservice.getStates(query).subscribe(res => {\n      console.log(res)\n      this.States = res['states'];\n   });\n  }\n  \n  ngOnInit() {\n      this.getCountries();\n   }\n  \n     \n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CityinfoComponent } from './cityinfo/cityinfo.component';\nimport { AddcityComponent } from './addcity/addcity.component';\nimport { EditcityComponent } from './editcity/editcity.component';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutModule } from '../theme/layouts/layout.module';\nimport { DefaultComponent } from '../theme/pages/default/default.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxUploaderModule } from 'ngx-uploader';\nimport { FileUploadModule } from 'primeng/components/fileupload/fileupload';\nimport { Ng2PaginationModule } from 'ng2-pagination';\nimport { ValidationService } from '../services/validation.service';\nimport { AgmCoreModule } from '@agm/core';\nimport { ScheduleModule } from 'primeng/primeng';\nimport { CalendarModule } from 'primeng/primeng';\nimport { Ng4GeoautocompleteModule } from 'ng4-geoautocomplete';\nimport { ToastrModule } from 'ngx-toastr';\n\nconst routes: Routes = [\n    {\n        'path': '',\n        'component': DefaultComponent,\n        'children': [\n            {\n                'path': '',\n                'component': CityinfoComponent,\n            },\n            {\n                'path': 'edit-city/:driverid',\n                'component': EditcityComponent,\n              },\n              {\n                'path': 'add-city',\n                'component': AddcityComponent,\n              }\n        ],\n    },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyAp5vIeGvze_ZWYwee-fVE3JS3LYnREZP0\",\n      libraries: [\"places\"]\n    }),\n    ToastrModule.forRoot(),\n    NgbModule.forRoot(),\n    Ng4GeoautocompleteModule.forRoot(),\n\t  RouterModule.forChild(routes),\n    LayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxUploaderModule,\n    Ng2PaginationModule,\n    FileUploadModule,\n    ScheduleModule,\n    CalendarModule\n  ],\n  declarations: [CityinfoComponent, AddcityComponent, EditcityComponent]\n})\nexport class CityModule { }\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n      \\n              <div class=\\\"pull-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n      \\n                  <h1 class=\\\"title\\\">Manage City Lists</h1>\\n                  <!-- PAGE HEADING TAG - END -->\\n              </div>\\n      \\n              <div class=\\\"pull-right hidden-xs\\\">\\n                  <ol class=\\\"breadcrumb\\\">\\n                      <li>\\n                          <a routerLink=\\\"/\\\">\\n                              <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                      </li>\\n                      <li class=\\\"active\\\">\\n                          <strong>City Lists</strong>\\n                      </li>\\n      \\n                  </ol>\\n              </div>\\n      \\n          </div>\\n          <div class=\\\"custum-links\\\" style=\\\"position: absolute; right: 15px; z-index: 1\\\">\\n              <a routerLink=\\\"/city/add-city\\\" style=\\\"font-weight: bold;\\\">\\n                  <i class=\\\"fa fa-plus\\\"></i> Add City </a> &nbsp;\\n             \\n          </div>\\n      </div>\\n      \\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"page-title\\\">\\n  \\n                <div class=\\\"float-left\\\">\\n                    <!-- PAGE HEADING TAG - START -->\\n              \\n                </div>\\n                <div class=\\\"float-right\\\">\\n                   <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n  \\n                </div>\\n  \\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <!-- MAIN CONTENT AREA STARTS -->\\n  \\n        <div class=\\\"col-xl-12\\\">\\n            <section class=\\\"box \\\">\\n                  <div class=\\\"content-body \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                          <div class=\\\"container\\\" style=\\\"margin-left: 0;max-width: 1299px;\\\">\\n  \\n                            <div class=\\\"pagination-data\\\" style=\\\"overflow: scroll;height:600px;min-height:600px;\\\">\\n    \\n                            <table id=\\\"example-11\\\" class=\\\"display table table-bordered table-hover table-condensed dataTable no-footer\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n                                <thead>\\n                                    <tr>\\n                                      <th>S.No.</th>\\n                                      <th> City Name </th>\\n                                      <th> Country Name </th>\\n                                      <th> State Name </th>\\n                                      <th> Action </th>\\n                                      \\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                  <tr *ngFor=\\\"let conlist of Cities; let i=index\\\" class=\\\"ng-scope\\\">\\n                                        <td class=\\\"ng-binding\\\"> {{i+1}} </td>\\n                                        <td class=\\\"ng-binding\\\"> {{conlist.cityName}} </td>\\n                                        <td class=\\\"ng-binding\\\"> {{conlist.country.countryName}} </td>\\n                                        <td class=\\\"ng-binding\\\"> {{conlist.state.stateName}} </td>\\n                                        <td style=\\\"min-width:120px;\\\">\\n                                            <i class=\\\"fa fa-trash ng-pristine text-danger ng-untouched ng-valid ng-empty\\\" ng-model=\\\"_id\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal-delete\\\" aria-hidden=\\\"true\\\" title=\\\"Delete user\\\" (click)=\\\"deleteCities(conlist._id)\\\"></i> &nbsp;\\n  \\n                                            <a [routerLink]=\\\"['edit-cty', conlist._id]\\\">\\n                                                <i class=\\\"fa fa-eye text-primary\\\" aria-hidden=\\\"true\\\" title=\\\"view user\\\"></i>\\n                                            </a> &nbsp; <a [routerLink]=\\\"['edit-city', conlist._id]\\\">\\n                                                <i class=\\\"fa fa-edit text-success\\\" aria-hidden=\\\"true\\\" title=\\\"edit user\\\"></i>\\n                                            </a>\\n                                        </td>\\n                                    </tr>\\n  \\n                                </tbody>\\n                            </table>\\n                            <!-- ********************************************** -->\\n                            </div>\\n                           </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </section>\\n        </div>\\n  \\n  \\n  \\n  \\n  \\n  \\n      \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { CityService } from '../../services/city.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cityinfo',\n  templateUrl: './cityinfo.component.html',\n  styleUrls: ['./cityinfo.component.scss']\n})\nexport class CityinfoComponent implements OnInit {\n  Cities:any;\n  constructor(\n    private service: CityService,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit() {\n    this.getCities();\n  }\n\n  getCities() {\n    this.service.getCities().subscribe(res => {\n      this.Cities = res['cities'];\n   });\n  }\n\n  deleteCities(id) {\n    let query = '/'+id;\n    this.service.deleteCities(query).subscribe(\n      data => {\n          this.toastr.success('City deleted Successfully');\n         \n      },\n      error => {\n        this.toastr.error('error')\n      });\n   \n  }\n\n}\n","module.exports = \"\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"page-title\\\">\\n    \\n            <div class=\\\"pull-left\\\">\\n                <!-- PAGE HEADING TAG - START -->\\n    \\n                <h1 class=\\\"title\\\">Edit City</h1>\\n                <!-- PAGE HEADING TAG - END -->\\n            </div>\\n    \\n            <div class=\\\"pull-right hidden-xs\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li>\\n                        <a routerLink=\\\"/\\\">\\n                            <i class=\\\"fa fa-home\\\"></i>Home</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/city\\\">\\n                            <i class=\\\"fa fa-list-ol\\\"></i>City Lists</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <strong>Edit City</strong>\\n                    </li>\\n    \\n                </ol>\\n            </div>\\n    \\n        </div>\\n     \\n    </div>\\n    \\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n\\n              <div class=\\\"float-left\\\">\\n                  <!-- PAGE HEADING TAG - START -->\\n            \\n              </div>\\n              <div class=\\\"float-right\\\">\\n                 <!-- <a [routerLink]=\\\"['add-subadmin']\\\"> <i class=\\\"fa fa-plus\\\"></i>Dashboard </a>-->\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n      <!-- MAIN CONTENT AREA STARTS -->\\n    \\n      <div class=\\\"col-xl-12\\\">\\n            <section class=\\\"box \\\">\\n                  <div class=\\\"content-body \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                          <div class=\\\"container\\\">\\n                            <form [formGroup]=\\\"userForm\\\" (submit)=\\\"saveUser()\\\">\\n                               \\n                              <div  class=\\\"form-group row\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <label class=\\\"mt-2\\\" for=\\\"cityName\\\"><strong>City Name*</strong></label>\\n                                </div>\\n                                <div  class=\\\"col-sm-9\\\">\\n                                    <input type=\\\"text\\\" formControlName=\\\"cityName\\\"  class=\\\"form-control\\\" max=\\\"40\\\" id=\\\"cityName\\\"  placeholder=\\\"City Name\\\" />  <br>\\n                                  \\n                              </div>\\n                             </div>\\n                            \\n                              <div  class=\\\"form-group row\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <label class=\\\"mt-2\\\" for=\\\"country\\\"><strong>Country*</strong></label>\\n                                </div>\\n                                <div  class=\\\"col-sm-9\\\">\\n                                      <select id=\\\"country\\\" formControlName=\\\"country\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                              <option>--Select--</option>\\n                                              <option *ngFor=\\\"let s of Countries\\\" [ngValue]=\\\"s._id\\\"> {{ s.countryName }}</option>\\n                                      </select>    \\n                                     \\n                                </div>\\n                              </div>\\n                               \\n                               <div  class=\\\"form-group row\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label class=\\\"mt-2\\\" for=\\\"countryCode\\\"><strong>State Name*</strong></label>\\n                                    </div>\\n                                    <div  class=\\\"col-sm-9\\\">\\n                                        <select id=\\\"country\\\" formControlName=\\\"stateName\\\"  (change)=\\\"getStates()\\\" class=\\\"form-control\\\" >\\n                                          <option>--Select--</option>\\n                                          <option *ngFor=\\\"let s of States\\\" [ngValue]=\\\"s._id\\\"> {{ s.stateName }}</option>\\n                                        </select> \\n                                  </div>\\n                               </div>\\n\\n                                   <div  class=\\\"form-group row\\\">\\n                                      <div class=\\\"col-sm-3\\\">\\n                                          <label class=\\\"mt-2\\\" for=\\\"name\\\"><strong></strong></label>\\n                                      </div>\\n                                      <div  class=\\\"col-sm-9\\\">\\n                                          <button type=\\\"submit\\\"  class=\\\"btn btn-primary btn-block\\\">Add User</button>\\n                                      </div>\\n                                  </div>    \\n                                 \\n                              </form>\\n                    \\n                           \\n                           </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </section>\\n        </div>\\n\\n\\n\\n\\n\\n\\n    \"","module.exports = \"\"","import { Component, EventEmitter, Injectable, ElementRef, NgZone, OnInit, ViewChild} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\nimport {HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { MapsAPILoader } from '@agm/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { StateService } from '../../services/state.service';\nimport { CountryService } from '../../services/country.service';\nimport { CityService } from '../../services/city.service';\n\n@Component({\n  selector: 'app-editcity',\n  templateUrl: './editcity.component.html',\n  styleUrls: ['./editcity.component.scss']\n})\nexport class EditcityComponent implements OnInit {\n\n  userForm: any;\n  cityid;\n  formData: FormData;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  msg: any = null;\n  options: UploaderOptions;\n  Cities:any;\n  lastChar:any;  \n\n  public lat: any = '';\n  public lng: any = '';\n  public countryName: any = '';\n\n  Countries: any[] = [{'country':'--Select--', '_id':''}];\n  States: any[] = [{'stateName':'--Select--', '_id':''}];\n  default: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private service: CityService,\n    private countryservice: CountryService,\n    private stateservice: StateService,\n    private toastr: ToastrService,\n    private _router: Router,\n    public http: HttpClient,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone\n      \n  ) {\n      \n   \n\n    this.route.params.subscribe((params) => {\n      this.cityid = params['driverid'];\n     // console.log(this.driverid)\n      this.options = { concurrency: 1, maxUploads: 3 };\n      this.files = []; // local uploading files array\n      this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n      this.humanizeBytes = humanizeBytes;\n    });\n\n    this.userForm = this.formBuilder.group({\n      'id': [ this.cityid, Validators.required],\n      'stateName': ['', Validators.required],\n      'country': ['', ],\n      'cityName': ['', ]     \n     });\n    this.userForm.controls['stateName'].setValue(this.default, {onlySelf: true});\n    this.userForm.controls['country'].setValue(this.default, {onlySelf: true});\n   \n  }\n\n  \n  \n  saveUser() {\n    console.log(this.userForm.value)\n\n    if(this.userForm.value.country == ''){\n      this.toastr.error('Country is required');\n      return false;\n    }\n    if (this.userForm.dirty && this.userForm.valid) {\n        let query = '/'+this.cityid; \n        this.service.updateCities(this.userForm.value,query).subscribe(\n            data => {\n                this.toastr.success('City updated Successfully');\n                this._router.navigate(['/city']);\n            },\n            error => {\n              this.toastr.error('error')\n            });\n       \n    }\n  }\n     \n  getCountries() {\n    this.countryservice.getCountries().subscribe(res => {\n      this.Countries = res['countries'];\n   });\n  }\n\n  getStates(id=\"\") {\n    if(id==\"\"){\n        id=this.userForm.value.country;\n    }\n    let cid = id;\n    let query = '?country_id='+cid;\n   // let query = '?country_id='+'5b64792806ff811e1f06f0d0';\n    this.stateservice.getStates(query).subscribe(res => {\n      console.log(res)\n      this.States = res['states'];\n     \n   });\n  }\n  getCities() {\n    let query = '/'+this.cityid\n    this.service.getCities(query).subscribe(res => {\n      this.Cities = res['cities'];\n\n      this.userForm.controls['id'].setValue( this.Cities.id, {onlySelf: true});\n      this.userForm.controls['cityName'].setValue( this.Cities.cityName, {onlySelf: true});\n      this.userForm.controls['country'].setValue( this.Cities.country._id, {onlySelf: true});\n      this.getStates(this.Cities.state.country);\n      this.userForm.controls['stateName'].setValue( this.Cities.state._id, {onlySelf: true});\n      \n   });\n  }\n  \n  ngOnInit() {\n      this.getCountries();\n      this.getCities();\n   }\n  \n    \n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { environment as env } from '../../environments/environment';\nimport { Config } from '../services/config';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n\n  \n config = new Config;\n  constructor(private http: HttpClient ) {}\n\n  getCities(query=\"\") {\n  const uri = env.APIURL + '/cities'+query;\n    return this\n        .http\n        .get(uri);\n  }Y\n\n  addCities(data) {\n    const uri = env.APIURL + '/cities';\n    return this\n        .http\n        .post(uri, data);\n  }\n  updateCities(data,query=\"\") {\n    const uri = env.APIURL + '/cities'+query;\n    return this\n        .http\n        .put(uri, data);\n  }\n  deleteCities(query=\"\") {\n    const uri = env.APIURL + '/cities'+query;\n    return this\n        .http\n        .delete(uri);\n  }\n}\n","import { Headers } from '@angular/http';\r\n\r\nexport class Config {\r\n    headerOptions: any = {\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json'\r\n        })\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { environment as env } from '../../environments/environment';\nimport { Config } from '../services/config';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n\n  config = new Config;\n  constructor(private http: HttpClient ) {}\n\n  getCountries(query=\"\") {\n  const uri = env.APIURL + '/countries'+query;\n    return this\n        .http\n        .get(uri);\n  }\n\n  addCountries(data) {\n    const uri = env.APIURL + '/countries';\n    return this\n        .http\n        .post(uri, data);\n  }\n  updateCountries(data,query=\"\") {\n    const uri = env.APIURL + '/countries'+query;\n    return this\n        .http\n        .put(uri, data);\n  }\n  deleteCountries(query=\"\") {\n    const uri = env.APIURL + '/countries'+query;\n    return this\n        .http\n        .delete(uri);\n  }\n\n /* uplodpic(event) {\n    console.log(event)\n       const uri = env.APIURL +'/users/images';\n      const fileList: FileList = event.files;\n      if (fileList.length > 0) {\n          const file = fileList[0];\n  \n          const formData = new FormData();\n          formData.append('flag_128', file, file.name);\n          return this\n          .http\n          .post(uri, formData)\n          .map((res: Response) => {\n              return res.json();\n          })\n          .catch((error: Response) => {\n              error = error.json();\n              return Observable.throw(error);\n          });\n         \n      }\n  }*/\n\n  uploadLogo(event) {\n         const uri = env.APIURL +'/users/images';\n        const fileList: FileList = event.target.files;\n    \n        const file = fileList[0];\n    \n        const formData = new FormData();\n        formData.append('flag_128', file, file.name);\n        return this\n                .http\n                .post(uri,formData);            \n     }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { environment as env } from '../../environments/environment';\nimport { Config } from '../services/config';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  config = new Config;\n  constructor(private http: HttpClient ) {}\n\n  getStates(query=\"\") {\n  const uri = env.APIURL + '/states'+query;\n    return this\n        .http\n        .get(uri);\n  }\n\n  addStates(data) {\n    const uri = env.APIURL + '/states';\n    return this\n        .http\n        .post(uri, data);\n  }\n  updateStates(data,query=\"\") {\n    const uri = env.APIURL + '/states'+query\n    return this\n        .http\n        .put(uri, data);\n  }\n\n  deleteStates(query=\"\") {\n    const uri = env.APIURL + '/states'+query\n    alert(uri)\n    return this\n        .http\n        .delete(uri);\n  }\n}\n"],"sourceRoot":""}